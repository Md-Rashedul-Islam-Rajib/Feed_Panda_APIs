var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.479,1,1.999]],["body/controllers/AppController.html",[0,2.491,1,3.368,2,2.042,3,0.435,4,0.376,5,0.376,6,3.589,7,0.771,8,1.913,9,4.917,10,1.866,11,0.033,12,0.932,13,4.308,14,1.569,15,1.482,16,0.605,17,0.932,18,2.953,19,3.589,20,0.435,21,0.062,22,3.115,23,2.042,24,1.569,25,4.308,26,0.027,27,0.027]],["title/modules/AppModule.html",[28,1.238,29,1.999]],["body/modules/AppModule.html",[1,3.234,2,2.126,3,0.339,4,0.293,5,0.293,11,0.033,16,0.689,17,0.728,18,3.004,19,2.8,20,0.339,21,0.048,26,0.023,27,0.023,28,2.002,29,4.075,30,1.594,31,1.594,32,1.934,33,1.934,34,1.594,35,2.904,36,2.58,37,2.8,38,2.8,39,2.8,40,2.8,41,3.319,42,2.735,43,3.319,44,2.228,45,1.875,46,2.58,47,1.934,48,1.751,49,3.362,50,3.243,51,3.362,52,3.362,53,3.362,54,3.362,55,2.8,56,3.362,57,3.362,58,3.362]],["title/injectables/AppService.html",[18,1.625,59,0.615]],["body/injectables/AppService.html",[3,0.451,4,0.39,5,0.39,7,0.8,8,1.956,9,4.978,11,0.033,12,0.967,14,1.626,15,1.515,16,0.514,17,0.967,18,2.797,20,0.451,21,0.064,24,1.626,26,0.028,27,0.028,59,1.059,60,1.773,61,3.721,62,4.467,63,4.467,64,4.467]],["title/controllers/CategoriesController.html",[0,1.479,65,1.999]],["body/controllers/CategoriesController.html",[0,2.39,2,1.059,3,0.225,4,0.195,5,0.195,7,0.4,8,1.222,10,2.079,11,0.033,12,1.039,14,1.748,15,1.552,16,0.58,17,0.483,20,0.225,21,0.032,22,1.615,23,1.059,24,1.748,26,0.017,27,0.017,65,2.15,66,1.861,67,1.861,68,2.901,69,2.901,70,3.231,71,1.93,72,2.795,73,2.275,74,2.234,75,2.625,76,1.861,77,1.59,78,4.028,79,2.795,80,1.58,81,2.886,82,4.669,83,2.795,84,2.234,85,2.079,86,1.474,87,1.137,88,1.474,89,2.234,90,1.861,91,4.481,92,2.795,93,2.234,94,2.479,95,1.861,96,2.625,97,1.861,98,2.234,99,3.73,100,2.234,101,1.861,102,1.861,103,1.861,104,2.234,105,1.861,106,3.009,107,1.861,108,2.426,109,2.234,110,2.795,111,1.163,112,2.795,113,3.356,114,1.059,115,4.199,116,3.998,117,1.861,118,0.968,119,2.098,120,1.861,121,1.432,122,2.426,123,1.615,124,1.163,125,1.432,126,2.234,127,2.234,128,2.234,129,1.861,130,1.861,131,2.234,132,3.998,133,1.631,134,1.861,135,2.234,136,3.355,137,1.861,138,2.234,139,1.861,140,2.234,141,2.234,142,1.861,143,1.861,144,2.234,145,1.861,146,2.234,147,2.234,148,1.861,149,2.234,150,2.234]],["title/modules/CategoriesModule.html",[28,1.238,41,1.795]],["body/modules/CategoriesModule.html",[2,2.192,3,0.355,4,0.307,5,0.307,11,0.033,16,0.686,17,0.762,20,0.355,21,0.05,26,0.024,27,0.024,28,2.049,30,1.67,31,1.67,32,2.026,33,2.026,34,1.67,35,2.971,36,2.026,41,3.637,42,2.771,44,2.128,46,2.661,47,2.026,48,1.834,50,3.344,65,3.31,119,3.044,120,2.934,151,2.934,152,2.934,153,3.522,154,3.044,155,2.532,156,3.522,157,3.522,158,2.934,159,2.257,160,2.934,161,2.257,162,1.834,163,2.257]],["title/injectables/CategoriesService.html",[59,0.615,119,1.625]],["body/injectables/CategoriesService.html",[3,0.172,4,0.149,5,0.149,7,0.305,8,0.991,11,0.034,12,0.977,14,1.791,15,1.43,16,0.566,17,0.369,20,0.172,21,0.024,23,1.609,24,1.725,26,0.014,27,0.014,45,1.296,59,0.537,60,0.676,68,1.566,70,1.093,73,0.808,75,2.467,77,1.29,80,0.957,81,2.877,85,1.955,86,1.746,87,1.069,88,1.273,94,2.695,96,2.351,106,2.831,108,1.233,111,2.206,114,1.29,119,1.417,121,1.093,122,1.967,123,1.233,124,0.888,125,1.093,133,1.236,154,2.467,155,2.052,159,1.093,160,1.42,162,0.888,163,1.093,164,1.42,165,2.93,166,3.238,167,2.721,168,2.721,169,2.721,170,2.266,171,3.395,172,1.566,173,0.981,174,1.705,175,1.566,176,2.721,177,1.705,178,1.566,179,3.264,180,2.714,181,2.721,182,2.726,183,2.721,184,1.705,185,2.721,186,1.705,187,2.484,188,2.992,189,2.455,190,2.266,191,2.018,192,1.566,193,2.266,194,1.566,195,2.23,196,2.266,197,1.705,198,2.828,199,1.705,200,1.705,201,1.42,202,1.233,203,0.808,204,0.981,205,2.23,206,1.705,207,2.266,208,2.052,209,2.721,210,1.705,211,1.744,212,1.233,213,0.808,214,2.23,215,1.42,216,1.42,217,1.705,218,3.062,219,1.705,220,2.828,221,3.528,222,2.721,223,1.705,224,2.266,225,2.828,226,1.705,227,1.705,228,1.42,229,1.705,230,1.42,231,2.266,232,1.705,233,1.705,234,1.42,235,1.42,236,1.705,237,2.721,238,1.705,239,1.705,240,1.705,241,1.705,242,1.705,243,1.705,244,1.705,245,1.705,246,1.705]],["title/classes/CategoryQueryDto.html",[21,0.045,96,1.625]],["body/classes/CategoryQueryDto.html",[3,0.217,4,0.187,5,0.187,7,0.384,10,2.302,11,0.033,12,1.15,15,1.238,16,0.505,20,0.217,21,0.056,26,0.017,27,0.017,73,1.544,80,1.675,81,2.354,86,1,87,1.336,88,1.675,96,1.696,118,0.93,133,1.598,178,1.874,191,2.049,202,2.844,203,1.018,208,1.41,213,2.769,247,0.852,248,4.533,249,1.553,250,1.41,251,2.969,252,1.865,253,2.446,254,2.263,255,2.263,256,2.263,257,2.521,258,3.843,259,3.406,260,3.807,261,3.256,262,2.147,263,2.768,264,2.081,265,2.814,266,2.087,267,2.355,268,1.553,269,1.789,270,3.024,271,1.553,272,2.147,273,2.713,274,1.789,275,2.147,276,2.087,277,1.553,278,2.147,279,2.844,280,3.935,281,2.526,282,1.874,283,2.844,284,2.355,285,1.553,286,2.147,287,3.277,288,1.789,289,2.147,290,2.147,291,3.131,292,1.376,293,3.277,294,1.553,295,1.553,296,2.844,297,3.131,298,2.087,299,1.553,300,1.553,301,1.118,302,3.406,303,2.355,304,1.553,305,1.553,306,1.789,307,1.789,308,1.789,309,1.789,310,2.147,311,1.376]],["title/classes/CreateCategoryDto.html",[21,0.045,75,1.625]],["body/classes/CreateCategoryDto.html",[3,0.31,4,0.268,5,0.268,7,0.55,10,2.248,11,0.033,12,1.123,15,1.584,16,0.555,20,0.31,21,0.06,26,0.022,27,0.022,75,2.199,80,1.623,81,2.46,86,1.67,87,1.229,88,1.463,94,1.458,118,1.332,133,1.89,182,2.774,202,3.486,203,1.458,208,2.356,211,2.706,213,2.285,215,4.016,247,1.22,250,1.829,259,1.971,260,2.706,264,1.458,281,2.429,282,2.429,287,2.561,288,2.561,291,2.774,294,2.223,297,2.774,298,3.326,301,1.601,302,3.09,306,2.561,307,2.561,308,2.561,309,2.561,311,1.971,312,4.531,313,2.223,314,4.221,315,3.752,316,3.326,317,2.561,318,3.074,319,2.223,320,3.517,321,3.517,322,3.517,323,3.517,324,3.074,325,3.074,326,3.074,327,3.074,328,3.074,329,4.016,330,4.016,331,2.223]],["title/classes/CreateProductDto.html",[21,0.045,332,1.625]],["body/classes/CreateProductDto.html",[3,0.206,4,0.178,5,0.178,7,0.366,10,2.414,11,0.033,12,1.206,15,1.594,16,0.439,20,0.206,21,0.045,26,0.016,27,0.016,80,1.661,81,1.487,86,1.418,87,1.356,88,1.594,94,2.029,118,0.886,133,1.681,182,2.196,188,2.463,192,1.805,194,2.196,203,0.97,208,2,211,2.011,213,1.487,247,0.812,250,1.359,263,2.229,264,1.487,281,2.463,291,2.656,294,1.479,297,2.803,298,3.123,301,1.065,311,1.311,316,3.908,317,1.704,319,3.095,320,2.614,321,2.614,322,2.614,323,3.179,329,4.36,330,4.225,331,2.76,332,1.634,333,4.709,334,1.479,335,3.179,336,3.817,337,3.179,338,3.338,339,3.817,340,2.614,341,2.045,342,2.045,343,2.045,344,2.045,345,3.329,346,3.137,347,2.045,348,2.045,349,5.072,350,3.137,351,4.28,352,2.045,353,2.045,354,2.614,355,3.137,356,2.045,357,2.045,358,2.045,359,3.137,360,2.614,361,3.137,362,2.045,363,2.045,364,2.045,365,2.045,366,4.616,367,3.817,368,3.137,369,2.045,370,2.045,371,2.045,372,2.045,373,3.846,374,3.179,375,2.045,376,2.045,377,2.045,378,2.045,379,3.179,380,2.045,381,2.045,382,2.045,383,2.045,384,2.045,385,2.045,386,2.045,387,2.045,388,2.045,389,2.045,390,2.045,391,2.045,392,2.045]],["title/injectables/FindAllCategoryProvider.html",[59,0.615,154,1.625]],["body/injectables/FindAllCategoryProvider.html",[3,0.269,4,0.232,5,0.232,7,0.477,8,1.39,11,0.034,12,0.826,14,1.39,16,0.561,17,0.576,20,0.269,21,0.038,23,1.809,24,0.97,26,0.02,27,0.02,44,2.012,45,1.629,59,0.753,60,1.057,68,2.196,71,2.196,77,1.809,80,0.751,81,2.444,85,1.653,86,1.496,87,0.904,88,1.076,94,1.262,95,3.179,96,2.878,111,1.387,114,2.114,123,1.925,124,1.387,133,1.624,154,1.988,161,1.707,165,2.323,166,2.566,172,2.196,173,1.532,175,2.196,179,2.759,180,1.707,187,2.446,188,3.088,189,2.759,190,3.716,191,2.537,192,2.196,193,3.179,194,2.196,195,2.566,204,1.532,205,2.196,208,1.153,212,1.925,214,2.196,251,2.566,252,1.809,253,1.809,254,2.803,255,2.196,256,2.196,257,2.446,264,1.262,315,2.759,393,3.716,394,2.218,395,2.663,396,2.663,397,1.925,398,2.663,399,2.663,400,1.707,401,1.925,402,2.218,403,2.218,404,3.179,405,2.218,406,2.218,407,2.218,408,2.218,409,3.179,410,2.759,411,3.179,412,2.218,413,1.707,414,2.663,415,2.218]],["title/injectables/FindAllProductsProvider.html",[59,0.615,416,1.625]],["body/injectables/FindAllProductsProvider.html",[3,0.256,4,0.222,5,0.222,7,0.455,8,1.343,11,0.034,12,0.798,14,1.343,16,0.549,17,0.55,20,0.256,21,0.036,23,1.749,24,0.925,26,0.019,27,0.019,44,1.843,45,1.594,59,0.728,60,1.008,68,1.462,71,2.123,73,1.204,77,1.749,80,1.04,85,1.598,86,1.334,87,0.874,88,1.04,111,1.323,114,1.749,124,1.323,133,1.736,161,1.629,165,2.262,166,2.499,172,2.123,173,1.462,175,2.123,178,1.462,180,1.629,187,2.365,188,2.123,192,2.123,204,1.462,205,2.123,208,1.101,214,2.123,251,2.499,252,1.749,253,1.749,254,2.743,255,2.123,256,2.123,257,2.365,258,1.837,276,1.629,282,2.743,337,2.117,338,1.837,345,1.462,400,3.385,401,1.837,402,2.117,403,2.117,404,3.073,405,2.117,406,2.117,407,2.117,408,2.117,409,3.073,410,3.447,411,3.971,412,2.117,413,3.385,415,2.117,416,1.921,417,3.619,418,2.117,419,2.541,420,2.668,421,2.838,422,2.541,423,3.619,424,2.668,425,2.668,426,1.837,427,2.541,428,2.541,429,2.541,430,3.619,431,3.619,432,2.541,433,2.541,434,2.541,435,2.541,436,2.541,437,2.541,438,2.541,439,3.689,440,2.541]],["title/injectables/GenerateSlug.html",[59,0.615,155,1.351]],["body/injectables/GenerateSlug.html",[3,0.422,4,0.365,5,0.365,7,0.75,8,1.88,11,0.033,12,0.906,14,1.524,15,1.765,16,0.482,17,0.906,20,0.422,21,0.06,24,1.524,26,0.027,27,0.027,59,1.018,60,1.661,85,1.813,86,1.795,87,0.992,88,1.18,155,2.531,162,2.689,165,2.915,182,2.971,441,3.487,442,5.162,443,4.186,444,4.186]],["title/classes/PaginatedResponseDto.html",[21,0.045,445,2.256]],["body/classes/PaginatedResponseDto.html",[3,0.435,4,0.376,5,0.376,7,0.771,11,0.032,12,1.137,20,0.435,21,0.062,26,0.027,27,0.027,87,1.343,194,3.262,195,3.262,247,1.709,250,2.276,252,2.042,253,2.042,263,3.074,445,3.799,446,3.589,447,4.377,448,4.308,449,4.308,450,4.308,451,4.308,452,3.589,453,3.589,454,5.254,455,3.589]],["title/classes/PaginationDto.html",[21,0.045,456,2.256]],["body/classes/PaginationDto.html",[3,0.264,4,0.228,5,0.228,7,0.468,10,2.218,11,0.033,12,1.108,15,1.504,16,0.508,20,0.264,21,0.063,26,0.019,27,0.019,80,1.64,87,1.333,88,1.64,118,1.133,191,2.516,213,2.822,247,1.038,250,1.632,251,2.78,252,2.093,253,2.606,254,2.947,255,2.541,256,2.541,259,3.282,260,3.729,263,3.03,264,2.29,265,3.097,266,2.415,267,2.724,268,1.891,270,3.097,271,1.891,276,2.415,277,1.891,279,3.193,280,4.144,281,2.168,282,1.505,283,3.193,284,2.724,285,1.891,291,3.069,292,1.677,295,1.891,296,3.193,297,3.069,299,1.891,300,1.891,301,1.362,302,3.282,303,2.724,304,1.891,305,1.891,456,2.724,457,2.179,458,2.615,459,2.615,460,3.767,461,2.615,462,2.615,463,2.615,464,2.615,465,3.767]],["title/injectables/PaginationHelper.html",[44,1.136,59,0.615]],["body/injectables/PaginationHelper.html",[3,0.3,4,0.26,5,0.26,7,0.533,8,1.504,11,0.034,12,0.894,14,1.084,15,1.337,16,0.475,17,0.645,20,0.3,21,0.043,24,1.084,26,0.021,27,0.021,44,1.504,45,1.712,59,0.814,60,1.182,85,2.054,86,1.268,87,1.123,88,1.165,165,2.469,166,2.728,172,2.376,173,1.714,175,2.376,191,1.551,194,2.376,195,2.946,204,1.714,205,1.714,213,1.412,214,2.946,218,2.154,252,2.705,253,2.638,263,2.898,264,1.412,265,2.647,266,2.647,270,3.281,401,2.154,425,2.154,447,3.44,452,3.44,453,3.44,455,2.481,466,2.481,467,4.741,468,2.978,469,2.978,470,5.119,471,5.119,472,5.377,473,2.978,474,4.741,475,2.978,476,4.13,477,2.978,478,2.481,479,4.741,480,4.13,481,2.978,482,4.741,483,2.978,484,2.978,485,2.481,486,2.481,487,2.978,488,2.978,489,2.978,490,2.978,491,2.978,492,2.978,493,2.978,494,2.978]],["title/modules/PrismaModule.html",[28,1.238,42,1.479]],["body/modules/PrismaModule.html",[3,0.42,4,0.363,5,0.363,11,0.033,16,0.592,17,0.9,20,0.42,21,0.06,26,0.026,27,0.026,28,2.215,30,1.972,31,1.972,32,2.394,33,2.394,34,1.972,35,3.212,36,2.959,42,2.933,45,2.132,46,2.959,47,2.394,48,2.167,495,3.465,496,3.465,497,4.16,498,4.16,499,4.16,500,4.16]],["title/injectables/PrismaService.html",[45,1.043,59,0.615]],["body/injectables/PrismaService.html",[3,0.466,4,0.403,5,0.403,11,0.033,16,0.631,17,1,20,0.466,21,0.066,26,0.028,27,0.028,45,1.833,59,1.081,60,1.834,203,2.191,501,3.85,502,3.963,503,5.843]],["title/classes/ProductQueryDto.html",[21,0.045,421,1.625]],["body/classes/ProductQueryDto.html",[3,0.195,4,0.169,5,0.169,7,0.346,10,2.336,11,0.033,12,1.167,15,1.343,16,0.478,20,0.195,21,0.053,26,0.015,27,0.015,73,1.424,80,1.657,86,0.922,87,1.339,88,1.689,114,2.257,118,0.837,133,1.638,178,1.728,191,1.918,203,0.916,208,1.301,211,1.239,213,2.644,247,0.767,249,1.397,250,1.301,251,2.859,252,1.746,253,2.356,254,2.119,255,2.119,256,2.119,257,2.361,258,3.715,259,3.185,260,3.665,263,2.905,264,1.969,265,2.662,266,1.925,267,2.171,268,1.397,269,1.61,270,2.883,271,1.397,273,2.502,274,2.502,276,1.925,277,1.397,279,2.663,280,3.815,281,1.728,282,1.112,283,2.663,284,2.171,285,1.397,291,3.16,292,1.239,293,3.068,295,1.397,296,2.663,297,3.16,298,2.361,299,1.397,300,1.397,301,1.006,302,3.185,303,2.171,304,1.397,305,1.397,311,1.239,316,3.052,319,2.663,331,1.397,338,3.003,345,2.39,373,1.61,374,1.61,379,3.068,400,3.052,421,1.564,424,3.443,430,3.068,431,3.068,504,4.575,505,3.003,506,1.932,507,1.932,508,4.761,509,3.003,510,1.932,511,1.932,512,3.003,513,1.932,514,1.932,515,1.932,516,1.932,517,1.932,518,1.932,519,1.932,520,1.932,521,1.932]],["title/controllers/ProductsController.html",[0,1.479,522,1.999]],["body/controllers/ProductsController.html",[0,1.137,2,1.137,3,0.242,4,0.209,5,0.209,7,0.43,8,1.288,10,2.142,11,0.033,12,1.07,14,1.801,15,1.581,16,0.596,17,0.519,20,0.242,21,0.034,22,1.735,23,1.137,24,1.801,26,0.018,27,0.018,67,1.998,69,2.669,70,2.693,71,2.035,72,2.947,73,2.199,76,1.998,77,1.677,79,2.947,80,1.549,82,4.575,83,2.947,85,2.142,86,1.519,87,1.171,88,1.509,90,1.998,91,4.311,92,2.947,94,2.537,97,1.998,99,2.947,101,1.998,102,1.998,103,1.998,105,1.998,107,1.998,108,2.558,110,2.947,111,1.249,112,1.998,113,2.947,114,1.137,115,4.311,116,4.12,117,1.998,118,1.039,121,1.538,124,1.249,125,1.538,132,4.12,133,1.689,134,1.998,137,2.947,139,1.998,142,1.998,143,1.998,145,1.998,148,1.998,332,2.695,345,3.401,413,2.693,420,1.735,421,2.695,426,1.735,522,2.267,523,1.998,524,3.537,525,2.399,526,4.202,527,2.399,528,2.399,529,2.399,530,2.399,531,2.399,532,3.16,533,2.399,534,2.189,535,1.998,536,2.558,537,2.399,538,2.399,539,2.399,540,2.399,541,2.399,542,2.399,543,2.399,544,2.399,545,2.399]],["title/modules/ProductsModule.html",[28,1.238,43,1.795]],["body/modules/ProductsModule.html",[2,2.204,3,0.358,4,0.31,5,0.31,11,0.033,16,0.687,17,0.768,20,0.358,21,0.051,26,0.024,27,0.024,28,2.057,30,1.683,31,1.683,32,2.043,33,2.043,34,1.683,35,2.983,36,2.043,42,2.777,43,3.641,44,2.079,46,2.675,47,2.043,48,1.849,50,3.362,155,2.473,158,2.957,159,2.275,161,2.275,162,1.849,163,2.275,416,3.051,522,3.323,534,3.051,535,2.957,546,2.957,547,2.957,548,3.55,549,3.55,550,3.55,551,2.957,552,3.55]],["title/injectables/ProductsService.html",[59,0.615,534,1.625]],["body/injectables/ProductsService.html",[3,0.148,4,0.128,5,0.128,7,0.262,8,0.876,11,0.034,12,0.911,14,1.619,15,1.357,16,0.535,17,0.317,20,0.148,21,0.021,23,1.681,24,1.426,26,0.012,27,0.012,44,1.619,45,1.186,55,1.22,59,0.474,60,0.581,68,2.981,69,2.253,70,1.963,71,1.384,73,1.452,77,1.681,80,1.187,81,2.28,85,1.823,86,1.558,87,1.1,88,1.187,94,2.829,111,2.192,114,1.141,121,0.939,124,0.763,125,0.939,133,0.876,155,1.927,159,0.939,162,0.763,163,0.939,165,2.828,166,3.125,170,2.004,172,1.384,173,0.843,175,1.384,178,1.384,179,3.044,180,2.51,182,1.762,187,2.272,188,2.04,189,2.564,192,1.762,195,1.384,196,2.004,198,2.953,201,1.22,204,0.843,205,2.04,207,2.004,208,1.696,212,1.059,214,2.559,216,1.22,218,3.359,220,2.551,221,2.004,224,2.551,225,2.953,228,2.004,230,3.262,231,2.004,234,1.22,235,1.22,315,2.214,332,2.316,335,3.262,340,2.953,345,3.387,397,1.059,400,1.542,413,3.083,416,1.846,420,1.74,421,2.192,423,2.004,424,1.74,425,1.74,426,1.059,486,2.551,532,2.768,534,1.253,536,1.74,551,1.22,553,1.22,554,2.406,555,2.406,556,2.406,557,3.062,558,1.465,559,2.406,560,1.465,561,2.406,562,1.465,563,1.465,564,1.465,565,2.406,566,1.465,567,2.406,568,1.465,569,1.465,570,2.406,571,2.406,572,2.406,573,2.406,574,1.465,575,1.465,576,1.465,577,2.004,578,1.465,579,1.465,580,1.465,581,1.22,582,3.062,583,3.062,584,2.406,585,2.406,586,1.465,587,2.406,588,1.465,589,2.406,590,1.465,591,1.465,592,1.465,593,1.465,594,2.004,595,1.465,596,1.465,597,1.465,598,1.465,599,1.465,600,1.465,601,1.465,602,1.465,603,1.465,604,1.465,605,1.465,606,1.465,607,1.465]],["title/classes/UpdateCategoryDto.html",[21,0.045,106,1.795]],["body/classes/UpdateCategoryDto.html",[3,0.465,4,0.402,5,0.402,11,0.032,16,0.63,20,0.465,21,0.066,26,0.028,27,0.028,69,2.65,75,2.399,106,3.147,122,3.331,247,1.828,313,3.331,502,3.955,608,3.837,609,5.47,610,3.837,611,3.331,612,3.331]],["title/classes/UpdateProductDto.html",[21,0.045,532,1.795]],["body/classes/UpdateProductDto.html",[3,0.465,4,0.402,5,0.402,11,0.032,16,0.63,20,0.465,21,0.066,26,0.028,27,0.028,69,2.65,247,1.828,332,2.399,334,3.331,502,3.955,532,3.147,536,3.331,610,3.837,611,3.331,612,3.331,613,3.837,614,5.47]],["title/coverage.html",[615,3.083]],["body/coverage.html",[0,2.377,1,2.128,5,0.29,6,2.766,11,0.033,18,1.729,21,0.085,26,0.023,27,0.023,34,1.574,44,1.209,45,1.11,59,1.177,61,2.766,65,2.128,66,2.766,75,1.729,77,1.574,87,0.786,96,1.729,106,1.91,119,1.729,154,1.729,155,1.438,162,1.729,164,2.766,248,2.766,249,3.216,312,2.766,313,3.216,332,1.729,333,2.766,334,3.216,393,2.766,394,2.766,416,1.729,417,2.766,418,2.766,421,1.729,441,2.766,445,2.401,446,2.766,456,2.401,457,2.766,466,2.766,478,2.766,501,2.766,504,2.766,522,2.128,523,2.766,532,1.91,534,1.729,553,2.766,608,2.766,613,2.766,615,2.401,616,2.766,617,3.32,618,3.32,619,5.27,620,5.014,621,5.014,622,3.32,623,3.32,624,3.32,625,3.32,626,5.356,627,4.447,628,4.447,629,4.447,630,2.766,631,3.32,632,3.32,633,3.32,634,3.32,635,3.32,636,3.32]],["title/dependencies.html",[31,1.779,637,2.167]],["body/dependencies.html",[11,0.033,17,0.938,21,0.075,26,0.027,27,0.027,31,2.056,118,1.878,129,3.612,130,3.612,203,2.056,292,2.779,301,2.258,354,3.612,611,3.135,612,3.135,638,4.336,639,4.336,640,5.685,641,4.336,642,4.336,643,4.336,644,5.275,645,4.336,646,4.336,647,4.336,648,4.336,649,4.336,650,4.336,651,4.336,652,4.336,653,4.336]],["title/miscellaneous/functions.html",[654,2.167,655,3.127]],["body/miscellaneous/functions.html",[7,0.879,11,0.029,26,0.029,27,0.029,34,2.841,630,4.092,654,4.092,655,4.092,656,4.911]],["title/index.html",[7,0.559,657,3.119]],["body/index.html",[4,0.231,11,0.032,26,0.02,27,0.02,48,2.789,80,0.746,316,3.114,360,3.703,397,3.872,410,2.748,485,2.205,577,4.047,581,2.205,594,2.205,615,1.914,616,3.165,658,2.647,659,2.647,660,4.445,661,3.8,662,2.647,663,2.647,664,2.647,665,2.647,666,3.8,667,4.445,668,2.647,669,2.647,670,2.647,671,4.858,672,2.647,673,5.644,674,2.647,675,5.516,676,2.647,677,2.647,678,2.647,679,2.647,680,3.8,681,2.647,682,4.445,683,2.647,684,3.8,685,2.647,686,2.647,687,2.647,688,2.647,689,2.647,690,4.858,691,5.644,692,5.355,693,2.647,694,3.8,695,2.647,696,2.647,697,2.647,698,2.647,699,3.8,700,2.647,701,3.8,702,2.647,703,2.647,704,3.8,705,5.144,706,4.858,707,2.647,708,3.8,709,2.647,710,2.647,711,2.647,712,2.647,713,4.858,714,2.647,715,2.647,716,2.647,717,2.647,718,2.647,719,3.8,720,2.647,721,2.647,722,2.647,723,2.647,724,2.647,725,3.8,726,2.647,727,2.647,728,2.647,729,3.8,730,2.647,731,2.647,732,4.047,733,3.8,734,2.647,735,2.647,736,2.647,737,2.647,738,2.647,739,2.647,740,2.647,741,2.647,742,3.8,743,2.647,744,2.647,745,2.647,746,2.647,747,2.647,748,2.647,749,2.647,750,2.647,751,2.647,752,3.8,753,2.647,754,2.647,755,2.647,756,2.647,757,2.647,758,3.8,759,2.647,760,2.647,761,2.647,762,3.8,763,3.8,764,2.647,765,2.647,766,2.647,767,2.647,768,2.647,769,2.647,770,2.647,771,2.647,772,2.647,773,2.647,774,2.205,775,2.647,776,2.647,777,2.647,778,2.647,779,2.647,780,2.647,781,2.205]],["title/modules.html",[30,2.021]],["body/modules.html",[11,0.028,26,0.028,27,0.028,29,3.004,30,2.222,41,2.697,42,2.222,43,2.697,732,5.057,782,6.07,783,6.07,784,6.07]],["title/overview.html",[785,3.552]],["body/overview.html",[2,1.586,11,0.033,18,2.622,26,0.023,27,0.023,28,1.327,29,4.043,30,1.586,31,1.586,32,1.925,33,1.925,34,1.586,35,1.925,36,1.925,37,2.786,38,2.786,39,2.786,40,2.786,41,3.594,42,2.833,43,3.594,44,2.204,45,1.998,46,2.572,47,1.925,48,1.742,60,1.327,119,2.622,151,2.786,152,2.786,154,2.622,155,2.327,247,1.327,416,2.622,495,2.786,496,2.786,534,2.622,546,2.786,547,2.786,619,2.786,785,2.786,786,3.345,787,3.345,788,4.469]],["title/properties.html",[250,1.626,637,2.167]],["body/properties.html",[11,0.033,26,0.029,27,0.029,80,1.37,250,2.104,774,4.047,781,4.047,789,4.858,790,4.858,791,4.858]],["title/routes.html",[792,3.552]],["body/routes.html",[11,0.03,26,0.03,27,0.03,792,4.2]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":619,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["0.0.1",{"_index":790,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":270,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{}}}],["1.1.30",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":265,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{}}}],["11.0.1",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":385,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["1550",{"_index":521,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["1550})@isoptional()@isnumber",{"_index":510,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["15})@isnumber()@isnotempty",{"_index":362,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["2.1.0",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":91,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["201",{"_index":79,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["250",{"_index":520,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["250k",{"_index":388,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["250})@isoptional()@isnumber",{"_index":513,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["3",{"_index":787,"title":{},"body":{"overview.html":{}}}],["3/7",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":786,"title":{},"body":{"overview.html":{}}}],["42",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["5.0.1",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["6.15.0",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":788,"title":{},"body":{"overview.html":{}}}],["9.99",{"_index":383,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["9.99})@isnumber()@isnotempty",{"_index":364,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["absent",{"_index":322,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["active",{"_index":287,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{}}}],["adding",{"_index":399,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{}}}],["again",{"_index":236,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["allowing",{"_index":720,"title":{},"body":{"index.html":{}}}],["along",{"_index":241,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["amazing",{"_index":768,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":115,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["apiproperty",{"_index":329,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["apiproperty({description",{"_index":349,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiproperty({required",{"_index":314,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["apipropertyoptional",{"_index":291,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["apipropertyoptional({description",{"_index":319,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductQueryDto.html":{}}}],["apipropertyoptional({required",{"_index":259,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["apiresponse",{"_index":116,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["apiresponse({status",{"_index":138,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags",{"_index":117,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["apitags('categories",{"_index":126,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags('products",{"_index":537,"title":{},"body":{"controllers/ProductsController.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":692,"title":{},"body":{"index.html":{}}}],["applications",{"_index":666,"title":{},"body":{"index.html":{}}}],["applied",{"_index":489,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["applying",{"_index":429,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":192,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["asc",{"_index":279,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["async",{"_index":166,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["author",{"_index":774,"title":{},"body":{"index.html":{},"properties.html":{}}}],["auto",{"_index":320,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["available",{"_index":488,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["await",{"_index":218,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["aws",{"_index":708,"title":{},"body":{"index.html":{}}}],["backers",{"_index":769,"title":{},"body":{"index.html":{}}}],["base",{"_index":437,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["based",{"_index":703,"title":{},"body":{"index.html":{}}}],["before",{"_index":243,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["belongs",{"_index":351,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["between",{"_index":601,"title":{},"body":{"injectables/ProductsService.html":{}}}],["board",{"_index":761,"title":{},"body":{"index.html":{}}}],["body",{"_index":110,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["boolean",{"_index":454,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":784,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":782,"title":{},"body":{"modules.html":{}}}],["building",{"_index":661,"title":{},"body":{"index.html":{}}}],["burger",{"_index":311,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductQueryDto.html":{}}}],["burger'})@isstring()@isnotempty",{"_index":371,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["burger'})@isstring()@isoptional",{"_index":324,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["calculating",{"_index":480,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["calories",{"_index":387,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["cat_111','cat_112",{"_index":391,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["categories",{"_index":68,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["categories.controller",{"_index":157,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.length",{"_index":573,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categories.service",{"_index":120,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":65,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":41,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":119,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":81,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/ProductsService.html":{}}}],["category!.store_id",{"_index":240,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category'})@apiresponse({status",{"_index":78,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["category'})@isoptional()@isdatestring",{"_index":261,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["category.dto",{"_index":122,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":313,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:13",{"_index":318,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:23",{"_index":326,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:31",{"_index":325,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:39",{"_index":328,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.provider",{"_index":160,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["category.provider.ts",{"_index":394,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"coverage.html":{}}}],["category.provider.ts:19",{"_index":396,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{}}}],["category.provider.ts:8",{"_index":395,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{}}}],["categoryid",{"_index":585,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryids",{"_index":335,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductsService.html":{}}}],["categoryids.length",{"_index":596,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryids.map((categoryid",{"_index":584,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryids?.length",{"_index":574,"title":{},"body":{"injectables/ProductsService.html":{}}}],["categoryquerydto",{"_index":96,"title":{"classes/CategoryQueryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"coverage.html":{}}}],["categorystatus",{"_index":202,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{}}}],["categorystatus.active",{"_index":215,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{}}}],["cause",{"_index":228,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["changes",{"_index":590,"title":{},"body":{"injectables/ProductsService.html":{}}}],["channel",{"_index":735,"title":{},"body":{"index.html":{}}}],["check",{"_index":397,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["checking",{"_index":220,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["cheese",{"_index":382,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["cheese'})@isstring()@isoptional",{"_index":347,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["class",{"_index":21,"title":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":247,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"overview.html":{}}}],["clicks",{"_index":719,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":702,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":151,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_imports",{"_index":153,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["cluster_categoriesmodule_providers",{"_index":152,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":495,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":496,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":497,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_productsmodule",{"_index":546,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":548,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":547,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["collect",{"_index":568,"title":{},"body":{"injectables/ProductsService.html":{}}}],["combination",{"_index":181,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["combine",{"_index":209,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["come",{"_index":726,"title":{},"body":{"index.html":{}}}],["common/pagination/helper/pagination.helper",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProductsService.html":{}}}],["compodoc/compodoc",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":490,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["connect",{"_index":583,"title":{},"body":{"injectables/ProductsService.html":{}}}],["connection",{"_index":604,"title":{},"body":{"injectables/ProductsService.html":{}}}],["const",{"_index":214,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["constructor",{"_index":172,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["constructor(prisma",{"_index":173,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["contains",{"_index":409,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["contains:search",{"_index":439,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["controller('categories",{"_index":131,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('products",{"_index":538,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["converting",{"_index":465,"title":{},"body":{"classes/PaginationDto.html":{}}}],["count",{"_index":487,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["courses",{"_index":741,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":615,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":69,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["create(@body",{"_index":134,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["create(createcategorydto",{"_index":74,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["create(createproductdto",{"_index":525,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createcategory",{"_index":167,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["createcategory(createcategorydto",{"_index":176,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["createcategorydto",{"_index":75,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["created",{"_index":83,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["created_at",{"_index":251,"title":{},"body":{"classes/CategoryQueryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["createproduct",{"_index":554,"title":{},"body":{"injectables/ProductsService.html":{}}}],["createproduct(createproductdto",{"_index":559,"title":{},"body":{"injectables/ProductsService.html":{}}}],["createproductdto",{"_index":332,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["creation",{"_index":178,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{},"injectables/ProductsService.html":{}}}],["data",{"_index":195,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"classes/PaginatedResponseDto.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["database",{"_index":198,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["date",{"_index":258,"title":{},"body":{"classes/CategoryQueryDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{}}}],["date(created_at",{"_index":405,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["date(updated_at",{"_index":407,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{}}}],["deeper",{"_index":737,"title":{},"body":{"index.html":{}}}],["default",{"_index":213,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["delete",{"_index":70,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["delete(':id",{"_index":148,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":90,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["delete(@param('id",{"_index":149,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["delete(id",{"_index":89,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["deletecategory",{"_index":168,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["deletecategory(id",{"_index":183,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["deleted",{"_index":92,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["deleteproduct",{"_index":555,"title":{},"body":{"injectables/ProductsService.html":{}}}],["deleteproduct(id",{"_index":561,"title":{},"body":{"injectables/ProductsService.html":{}}}],["delicious",{"_index":346,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":690,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":707,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":699,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":718,"title":{},"body":{"index.html":{}}}],["desc",{"_index":280,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["description",{"_index":80,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"index.html":{},"properties.html":{}}}],["destructing",{"_index":428,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["destructuring",{"_index":212,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/ProductsService.html":{}}}],["development",{"_index":676,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":748,"title":{},"body":{"index.html":{}}}],["discontinued",{"_index":308,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{}}}],["discord",{"_index":734,"title":{},"body":{"index.html":{}}}],["dive",{"_index":736,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":616,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["don't",{"_index":579,"title":{},"body":{"injectables/ProductsService.html":{}}}],["dtos/category",{"_index":123,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{}}}],["dtos/create",{"_index":121,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/product",{"_index":426,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtos/update",{"_index":125,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["e2e",{"_index":685,"title":{},"body":{"index.html":{}}}],["each",{"_index":342,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["efficient",{"_index":662,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":697,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":695,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":751,"title":{},"body":{"index.html":{}}}],["enum",{"_index":281,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["example",{"_index":316,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductQueryDto.html":{},"index.html":{}}}],["examples",{"_index":273,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/ProductQueryDto.html":{}}}],["exception",{"_index":226,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["exist",{"_index":571,"title":{},"body":{"injectables/ProductsService.html":{}}}],["existing",{"_index":600,"title":{},"body":{"injectables/ProductsService.html":{}}}],["exists",{"_index":221,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["experience",{"_index":739,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["exports:[paginationhelper",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["exports:[prismaservice",{"_index":500,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":502,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["false",{"_index":260,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["fast",{"_index":711,"title":{},"body":{"index.html":{}}}],["features",{"_index":722,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":99,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["fetching",{"_index":136,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["few",{"_index":713,"title":{},"body":{"index.html":{}}}],["field",{"_index":276,"title":{},"body":{"classes/CategoryQueryDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["filter",{"_index":400,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{},"injectables/ProductsService.html":{}}}],["filtering",{"_index":425,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["filters",{"_index":137,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["filters'})@apiresponse({status",{"_index":98,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["find",{"_index":187,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["findall",{"_index":71,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findall(@query",{"_index":139,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["findall(categoryquerydto",{"_index":95,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/FindAllCategoryProvider.html":{}}}],["findall(productquerydto",{"_index":420,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findallcategory",{"_index":169,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["findallcategory(categoryquerydto",{"_index":185,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["findallcategoryprovider",{"_index":154,"title":{"injectables/FindAllCategoryProvider.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"coverage.html":{},"overview.html":{}}}],["findallproducts",{"_index":557,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findallproductsprovider",{"_index":416,"title":{"injectables/FindAllProductsProvider.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["findbyid",{"_index":170,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["findbyid(id",{"_index":196,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["findone",{"_index":72,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["findone(@param('id",{"_index":143,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["findone(id",{"_index":101,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["focus",{"_index":721,"title":{},"body":{"index.html":{}}}],["follow",{"_index":755,"title":{},"body":{"index.html":{}}}],["found",{"_index":225,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["framework",{"_index":660,"title":{},"body":{"index.html":{}}}],["fran_111",{"_index":381,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["fran_111'})@isstring()@isnotempty",{"_index":352,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["franchise",{"_index":350,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["franchise_id",{"_index":336,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["full",{"_index":750,"title":{},"body":{"index.html":{}}}],["function",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":655,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":716,"title":{},"body":{"index.html":{}}}],["generate",{"_index":235,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["generated",{"_index":321,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["generateslug",{"_index":155,"title":{"injectables/GenerateSlug.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/GenerateSlug.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["generateslug(store_id",{"_index":442,"title":{},"body":{"injectables/GenerateSlug.html":{}}}],["generating",{"_index":207,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["get(':id",{"_index":142,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["get(':id')@apioperation({summary",{"_index":102,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["get()@apioperation({summary",{"_index":97,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["graph",{"_index":744,"title":{},"body":{"index.html":{}}}],["grow",{"_index":765,"title":{},"body":{"index.html":{}}}],["gte",{"_index":404,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["hands",{"_index":738,"title":{},"body":{"index.html":{}}}],["handy",{"_index":727,"title":{},"body":{"index.html":{}}}],["hasnextpage",{"_index":453,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"injectables/PaginationHelper.html":{}}}],["haspreviouspage",{"_index":455,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"injectables/PaginationHelper.html":{}}}],["hello",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":742,"title":{},"body":{"index.html":{}}}],["here",{"_index":772,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":778,"title":{},"body":{"index.html":{}}}],["id",{"_index":94,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["id'})@apiresponse({status",{"_index":103,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["id'})@isstring()@isnotempty",{"_index":327,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["id(s",{"_index":578,"title":{},"body":{"injectables/ProductsService.html":{}}}],["id:true,name:true",{"_index":440,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["identifier",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":340,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductsService.html":{}}}],["if(maxprice",{"_index":435,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["if(minprice",{"_index":433,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["if(search",{"_index":438,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{}}}],["inactive",{"_index":306,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{}}}],["include",{"_index":486,"title":{},"body":{"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["includesrelations",{"_index":471,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["including",{"_index":190,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["information",{"_index":700,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":724,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":244,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["injectable",{"_index":59,"title":{"injectables/AppService.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["injectables",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["insensitive",{"_index":411,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["install",{"_index":715,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":674,"title":{},"body":{"index.html":{}}}],["instance",{"_index":189,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/ProductsService.html":{}}}],["interact",{"_index":745,"title":{},"body":{"index.html":{}}}],["isdatestring",{"_index":293,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/ProductQueryDto.html":{}}}],["isenum",{"_index":294,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["isenum(categorystatus",{"_index":309,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{}}}],["isenum(productpricingtype",{"_index":384,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isenum(productstatus",{"_index":386,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isin",{"_index":295,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["isin(['asc",{"_index":305,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["isint",{"_index":296,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["isn't",{"_index":223,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["isnotempty",{"_index":330,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["isnumber",{"_index":379,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/ProductQueryDto.html":{}}}],["isoptional",{"_index":297,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["isstring",{"_index":298,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductQueryDto.html":{}}}],["isuuid",{"_index":380,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isuuid('all',{each:true",{"_index":392,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["items",{"_index":266,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{}}}],["job",{"_index":758,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":760,"title":{},"body":{"index.html":{}}}],["join",{"_index":581,"title":{},"body":{"injectables/ProductsService.html":{},"index.html":{}}}],["json",{"_index":355,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["kamil",{"_index":775,"title":{},"body":{"index.html":{}}}],["key",{"_index":693,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":460,"title":{},"body":{"classes/PaginationDto.html":{}}}],["learn",{"_index":730,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["license",{"_index":781,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":763,"title":{},"body":{"index.html":{}}}],["limit",{"_index":252,"title":{},"body":{"classes/CategoryQueryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{}}}],["linkedin",{"_index":757,"title":{},"body":{"index.html":{}}}],["literal",{"_index":449,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["logic",{"_index":401,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{}}}],["looking",{"_index":701,"title":{},"body":{"index.html":{}}}],["loop",{"_index":753,"title":{},"body":{"index.html":{}}}],["makes",{"_index":709,"title":{},"body":{"index.html":{}}}],["managing",{"_index":723,"title":{},"body":{"index.html":{}}}],["match",{"_index":599,"title":{},"body":{"injectables/ProductsService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["math.ceil(total",{"_index":494,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["mau",{"_index":705,"title":{},"body":{"index.html":{}}}],["max",{"_index":299,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["max(50",{"_index":304,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["maximum",{"_index":509,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["maxprice",{"_index":431,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{}}}],["medium",{"_index":390,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["meta",{"_index":194,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"classes/PaginatedResponseDto.html":{},"injectables/PaginationHelper.html":{}}}],["metadata",{"_index":354,"title":{},"body":{"classes/CreateProductDto.html":{},"dependencies.html":{}}}],["method",{"_index":206,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["min",{"_index":300,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["min(1",{"_index":303,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["minimum",{"_index":512,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["minprice",{"_index":430,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{}}}],["minutes",{"_index":361,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["miscellaneous",{"_index":654,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":762,"title":{},"body":{"index.html":{}}}],["mode",{"_index":410,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"index.html":{}}}],["model",{"_index":474,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":577,"title":{},"body":{"injectables/ProductsService.html":{},"index.html":{}}}],["myśliwiec",{"_index":776,"title":{},"body":{"index.html":{}}}],["name",{"_index":86,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["name.tolocalelowercase",{"_index":444,"title":{},"body":{"injectables/GenerateSlug.html":{}}}],["named",{"_index":128,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["need",{"_index":594,"title":{},"body":{"injectables/ProductsService.html":{},"index.html":{}}}],["nest",{"_index":667,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":780,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":691,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":611,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":717,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":118,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"dependencies.html":{}}}],["new",{"_index":77,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["node.js",{"_index":659,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":201,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception('categories",{"_index":575,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception('one",{"_index":597,"title":{},"body":{"injectables/ProductsService.html":{}}}],["notfoundexception(`category",{"_index":227,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["notfoundexception(`product",{"_index":588,"title":{},"body":{"injectables/ProductsService.html":{}}}],["number",{"_index":263,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{}}}],["object",{"_index":188,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["offer",{"_index":759,"title":{},"body":{"index.html":{}}}],["official",{"_index":706,"title":{},"body":{"index.html":{}}}],["one",{"_index":576,"title":{},"body":{"injectables/ProductsService.html":{}}}],["open",{"_index":764,"title":{},"body":{"index.html":{}}}],["operation",{"_index":245,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["optional",{"_index":88,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["options",{"_index":423,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["order",{"_index":284,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["orderby",{"_index":472,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["others",{"_index":493,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":785,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":637,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":253,"title":{},"body":{"classes/CategoryQueryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{}}}],["paginate",{"_index":467,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["paginate(model",{"_index":469,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["paginatedresponsedto",{"_index":445,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/PaginatedResponseDto.html":{},"coverage.html":{}}}],["pagination",{"_index":191,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{}}}],["pagination'})@isoptional",{"_index":461,"title":{},"body":{"classes/PaginationDto.html":{}}}],["pagination'})@isoptional()@isin(['asc",{"_index":285,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["pagination'})@type(undefined)@isint()@isoptional()@min(1",{"_index":271,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["pagination'})@type(undefined)@isint()@isoptional()@min(1)@max(50",{"_index":268,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["paginationdto",{"_index":456,"title":{"classes/PaginationDto.html":{}},"body":{"classes/PaginationDto.html":{},"coverage.html":{}}}],["paginationhelper",{"_index":44,"title":{"injectables/PaginationHelper.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["paginationhelper,generateslug",{"_index":552,"title":{},"body":{"modules/ProductsModule.html":{}}}],["paginationhelper:paginationhelper",{"_index":427,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["param",{"_index":111,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["param('id",{"_index":146,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["parameter",{"_index":424,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{},"injectables/ProductsService.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["part",{"_index":749,"title":{},"body":{"index.html":{}}}],["partial",{"_index":567,"title":{},"body":{"injectables/ProductsService.html":{}}}],["partialtype",{"_index":610,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["partialtype(createcategorydto",{"_index":609,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createproductdto",{"_index":614,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["patch",{"_index":112,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["patch(':id",{"_index":145,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":107,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["per",{"_index":267,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["pizza",{"_index":331,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductQueryDto.html":{}}}],["pizza','store",{"_index":310,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["pizza'})@isstring()@isnotempty",{"_index":317,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["platform",{"_index":704,"title":{},"body":{"index.html":{}}}],["please",{"_index":733,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":673,"title":{},"body":{"index.html":{}}}],["possible",{"_index":698,"title":{},"body":{"index.html":{}}}],["post",{"_index":113,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["post()@apioperation({summary",{"_index":76,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["prefix",{"_index":67,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["preparation",{"_index":359,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["preparation_time",{"_index":337,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{}}}],["price",{"_index":338,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{}}}],["pricing",{"_index":368,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["pricing_type",{"_index":339,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["prisma",{"_index":175,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["prisma.service",{"_index":499,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":203,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":503,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":42,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":45,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["prismaservice,paginationhelper",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":205,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["product",{"_index":345,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["product's",{"_index":508,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["product'})@apiresponse({status",{"_index":526,"title":{},"body":{"controllers/ProductsController.html":{}}}],["product'})@isoptional()@isdatestring",{"_index":505,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["product.dto",{"_index":536,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":334,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:12",{"_index":378,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:20",{"_index":353,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:28",{"_index":358,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:36",{"_index":348,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:44",{"_index":365,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:53",{"_index":370,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:61",{"_index":363,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:70",{"_index":376,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:78",{"_index":372,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:85",{"_index":357,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:93",{"_index":344,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product_id",{"_index":603,"title":{},"body":{"injectables/ProductsService.html":{}}}],["production",{"_index":680,"title":{},"body":{"index.html":{}}}],["productpricingtype",{"_index":366,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["productpricingtype.flat",{"_index":367,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["productquerydto",{"_index":421,"title":{"classes/ProductQueryDto.html":{}},"body":{"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["products",{"_index":413,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["products.controller",{"_index":550,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.provider",{"_index":551,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["products.provider.ts",{"_index":418,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["products.provider.ts:20",{"_index":422,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products.provider.ts:8",{"_index":419,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["products.service",{"_index":535,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["productscontroller",{"_index":522,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":43,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":534,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productstatus",{"_index":373,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/ProductQueryDto.html":{}}}],["productstatus.published",{"_index":374,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/ProductQueryDto.html":{}}}],["progressive",{"_index":658,"title":{},"body":{"index.html":{}}}],["project",{"_index":671,"title":{},"body":{"index.html":{}}}],["promise",{"_index":476,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["promise.all",{"_index":483,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["properties",{"_index":250,"title":{"properties.html":{}},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{},"properties.html":{}}}],["provided",{"_index":230,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["providers/find",{"_index":159,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["public",{"_index":165,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["published",{"_index":569,"title":{},"body":{"injectables/ProductsService.html":{}}}],["query",{"_index":114,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["query.dto",{"_index":124,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["query.dto.ts",{"_index":249,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/ProductQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:18",{"_index":515,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["query.dto.ts:26",{"_index":272,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["query.dto.ts:30",{"_index":507,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["query.dto.ts:38",{"_index":269,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/ProductQueryDto.html":{}}}],["query.dto.ts:46",{"_index":278,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["query.dto.ts:48",{"_index":517,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["query.dto.ts:56",{"_index":286,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["query.dto.ts:57",{"_index":514,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["query.dto.ts:65",{"_index":511,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["query.dto.ts:68",{"_index":289,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["query.dto.ts:74",{"_index":518,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["query.dto.ts:76",{"_index":262,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["query.dto.ts:82",{"_index":506,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["query.dto.ts:84",{"_index":290,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["query.dto.ts:90",{"_index":519,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["query.dto.ts:93",{"_index":275,"title":{},"body":{"classes/CategoryQueryDto.html":{}}}],["query.dto.ts:99",{"_index":516,"title":{},"body":{"classes/ProductQueryDto.html":{}}}],["questions",{"_index":731,"title":{},"body":{"index.html":{}}}],["re",{"_index":234,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["read",{"_index":771,"title":{},"body":{"index.html":{}}}],["readme",{"_index":657,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["ready",{"_index":689,"title":{},"body":{"index.html":{}}}],["real",{"_index":746,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":414,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{}}}],["remove",{"_index":524,"title":{},"body":{"controllers/ProductsController.html":{}}}],["remove(@param('id",{"_index":544,"title":{},"body":{"controllers/ProductsController.html":{}}}],["remove(id",{"_index":530,"title":{},"body":{"controllers/ProductsController.html":{}}}],["repository",{"_index":670,"title":{},"body":{"index.html":{}}}],["required",{"_index":302,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["requiring",{"_index":712,"title":{},"body":{"index.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["resources",{"_index":725,"title":{},"body":{"index.html":{}}}],["response",{"_index":193,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{}}}],["rest",{"_index":570,"title":{},"body":{"injectables/ProductsService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"injectables/PaginationHelper.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["routes",{"_index":792,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":675,"title":{},"body":{"index.html":{}}}],["runs",{"_index":696,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":663,"title":{},"body":{"index.html":{}}}],["search",{"_index":254,"title":{},"body":{"classes/CategoryQueryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["select",{"_index":415,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["selecting",{"_index":477,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["separate",{"_index":127,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["server",{"_index":664,"title":{},"body":{"index.html":{}}}],["service",{"_index":179,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/ProductsService.html":{}}}],["set",{"_index":398,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{}}}],["setup",{"_index":672,"title":{},"body":{"index.html":{}}}],["side",{"_index":665,"title":{},"body":{"index.html":{}}}],["simple",{"_index":714,"title":{},"body":{"index.html":{}}}],["single",{"_index":141,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["size",{"_index":389,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["skip",{"_index":479,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["skipping",{"_index":481,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["slug",{"_index":208,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{},"injectables/ProductsService.html":{}}}],["slug.helper",{"_index":163,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["slug.helper.ts",{"_index":441,"title":{},"body":{"injectables/GenerateSlug.html":{},"coverage.html":{}}}],["slug.helper.ts:5",{"_index":443,"title":{},"body":{"injectables/GenerateSlug.html":{}}}],["sortby",{"_index":255,"title":{},"body":{"classes/CategoryQueryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["sorting",{"_index":283,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["sorting'})@isoptional",{"_index":277,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["sortorder",{"_index":256,"title":{},"body":{"classes/CategoryQueryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"index.html":{}}}],["sponsors",{"_index":767,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["src/categories/categories.controller.ts",{"_index":66,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts:18",{"_index":84,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:27",{"_index":100,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:36",{"_index":104,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:45",{"_index":109,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:56",{"_index":93,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":156,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.service.ts",{"_index":164,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/categories/categories.service.ts:11",{"_index":174,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:112",{"_index":184,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:32",{"_index":177,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:59",{"_index":186,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:69",{"_index":197,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:85",{"_index":200,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/dtos/category",{"_index":248,"title":{},"body":{"classes/CategoryQueryDto.html":{},"coverage.html":{}}}],["src/categories/dtos/create",{"_index":312,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/categories/dtos/update",{"_index":608,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/categories/providers/find",{"_index":393,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"coverage.html":{}}}],["src/common/helper/generate",{"_index":162,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/GenerateSlug.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/common/pagination/dtos/paginatedresponse.dto.ts",{"_index":446,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"coverage.html":{}}}],["src/common/pagination/dtos/paginatedresponse.dto.ts:3",{"_index":448,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/common/pagination/dtos/paginatedresponse.dto.ts:4",{"_index":450,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["src/common/pagination/dtos/pagination.dto.ts",{"_index":457,"title":{},"body":{"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/common/pagination/dtos/pagination.dto.ts:15",{"_index":459,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/pagination/dtos/pagination.dto.ts:27",{"_index":458,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/pagination/dtos/pagination.dto.ts:35",{"_index":463,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/pagination/dtos/pagination.dto.ts:45",{"_index":464,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/pagination/dtos/pagination.dto.ts:52",{"_index":462,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/common/pagination/helper/pagination.helper",{"_index":161,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"modules/ProductsModule.html":{}}}],["src/common/pagination/helper/pagination.helper.ts",{"_index":466,"title":{},"body":{"injectables/PaginationHelper.html":{},"coverage.html":{}}}],["src/common/pagination/helper/pagination.helper.ts:14",{"_index":473,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["src/common/pagination/helper/pagination.helper.ts:9",{"_index":468,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["src/main.ts",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":158,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":498,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":204,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/PaginationHelper.html":{},"injectables/ProductsService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":501,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/products/dtos/create",{"_index":333,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/products/dtos/product",{"_index":504,"title":{},"body":{"classes/ProductQueryDto.html":{},"coverage.html":{}}}],["src/products/dtos/update",{"_index":613,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/products/products.controller.ts",{"_index":523,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:16",{"_index":527,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:22",{"_index":528,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:29",{"_index":529,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:36",{"_index":533,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:43",{"_index":531,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":549,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":553,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:118",{"_index":566,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:12",{"_index":558,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:180",{"_index":562,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:28",{"_index":560,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:82",{"_index":563,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:93",{"_index":564,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/providers/find",{"_index":417,"title":{},"body":{"injectables/FindAllProductsProvider.html":{},"coverage.html":{}}}],["start",{"_index":677,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":679,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":681,"title":{},"body":{"index.html":{}}}],["starter",{"_index":669,"title":{},"body":{"index.html":{}}}],["statements",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":133,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["status'})@isoptional()@isenum(categorystatus",{"_index":288,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{}}}],["stay",{"_index":752,"title":{},"body":{"index.html":{}}}],["steps",{"_index":694,"title":{},"body":{"index.html":{}}}],["store",{"_index":211,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductQueryDto.html":{}}}],["store_111",{"_index":323,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{}}}],["store_111'})@isstring()@isnotempty",{"_index":377,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["store_id",{"_index":182,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/GenerateSlug.html":{},"injectables/ProductsService.html":{}}}],["straightforward",{"_index":710,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/GenerateSlug.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["successfully",{"_index":82,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["summary",{"_index":132,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["support",{"_index":732,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":783,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":129,"title":{},"body":{"controllers/CategoriesController.html":{},"dependencies.html":{}}}],["t",{"_index":447,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"injectables/PaginationHelper.html":{}}}],["table",{"_index":478,"title":{},"body":{"injectables/PaginationHelper.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":485,"title":{},"body":{"injectables/PaginationHelper.html":{},"index.html":{}}}],["test",{"_index":684,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":687,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":686,"title":{},"body":{"index.html":{}}}],["tests",{"_index":682,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":766,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.categoriesservice.createcategory(createcategorydto",{"_index":135,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.deletecategory(id",{"_index":150,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findallcategory(categoryquerydto",{"_index":140,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findbyid(id",{"_index":144,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.updatecategory(id,updatecategorydto",{"_index":147,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.findallcategoryprovider.findall(categoryquerydto",{"_index":219,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.findallproducts.findall(productquerydto",{"_index":586,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.findbyid(id",{"_index":231,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["this.generateslug.generateslug",{"_index":239,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.generateslug.generateslug(product!.store_id,updatedata.name",{"_index":593,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.generateslug.generateslug(store_id",{"_index":216,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["this.paginationhelper.paginate",{"_index":412,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["this.prisma.category.create",{"_index":217,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.prisma.category.delete",{"_index":246,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.prisma.category.findmany",{"_index":572,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.category.findunique",{"_index":222,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.prisma.category.update",{"_index":242,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.prisma.product.create",{"_index":580,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.delete({where",{"_index":607,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.findunique",{"_index":587,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.product.update",{"_index":606,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma.productcategories.deletemany",{"_index":602,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.prisma[model].count",{"_index":491,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["this.prisma[model].findmany",{"_index":484,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["this.productsservice.createproduct(createproductdto",{"_index":539,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(id",{"_index":545,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall(productquerydto",{"_index":540,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findbyid(id",{"_index":541,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(id",{"_index":543,"title":{},"body":{"controllers/ProductsController.html":{}}}],["though",{"_index":232,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["throw",{"_index":224,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["time",{"_index":360,"title":{},"body":{"classes/CreateProductDto.html":{},"index.html":{}}}],["total",{"_index":482,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["totalitems",{"_index":451,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["totalpages",{"_index":452,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"injectables/PaginationHelper.html":{}}}],["touch",{"_index":773,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":292,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{},"dependencies.html":{}}}],["true",{"_index":315,"title":{},"body":{"classes/CreateCategoryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/ProductsService.html":{}}}],["true})@isoptional",{"_index":343,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["twitter",{"_index":779,"title":{},"body":{"index.html":{}}}],["type",{"_index":87,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/GenerateSlug.html":{},"classes/PaginatedResponseDto.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["types",{"_index":612,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":668,"title":{},"body":{"index.html":{}}}],["ui",{"_index":130,"title":{},"body":{"controllers/CategoriesController.html":{},"dependencies.html":{}}}],["undefined",{"_index":282,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{}}}],["undefined})@isenum(productpricingtype)@isoptional",{"_index":369,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["undefined})@isenum(productstatus)@isoptional",{"_index":375,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["undefined})@isoptional",{"_index":356,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["undefined})@isoptional()@isstring",{"_index":274,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/ProductQueryDto.html":{}}}],["undefined})@isuuid('all",{"_index":341,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["unique",{"_index":210,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["unit",{"_index":683,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":180,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"injectables/ProductsService.html":{}}}],["unlicensed",{"_index":791,"title":{},"body":{"properties.html":{}}}],["upcoming",{"_index":307,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{}}}],["update",{"_index":73,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryQueryDto.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["update(@param('id",{"_index":542,"title":{},"body":{"controllers/ProductsController.html":{}}}],["update(id",{"_index":105,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["update,then",{"_index":595,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatecategory",{"_index":171,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(id",{"_index":199,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategorydto",{"_index":106,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatecategorydto.name",{"_index":237,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategorydto['slug",{"_index":238,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updated",{"_index":108,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{}}}],["updated_at",{"_index":257,"title":{},"body":{"classes/CategoryQueryDto.html":{},"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{},"classes/ProductQueryDto.html":{}}}],["updatedata",{"_index":589,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatedata.name",{"_index":591,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatedata['categories",{"_index":605,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatedata['slug",{"_index":592,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproduct",{"_index":556,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproduct(id",{"_index":565,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto",{"_index":532,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updates",{"_index":754,"title":{},"body":{"index.html":{}}}],["user",{"_index":233,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["using",{"_index":747,"title":{},"body":{"index.html":{}}}],["validator",{"_index":301,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/PaginationDto.html":{},"classes/ProductQueryDto.html":{},"dependencies.html":{}}}],["value",{"_index":264,"title":{},"body":{"classes/CategoryQueryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/FindAllCategoryProvider.html":{},"classes/PaginationDto.html":{},"injectables/PaginationHelper.html":{},"classes/ProductQueryDto.html":{}}}],["version",{"_index":789,"title":{},"body":{"properties.html":{}}}],["via",{"_index":582,"title":{},"body":{"injectables/ProductsService.html":{}}}],["video",{"_index":740,"title":{},"body":{"index.html":{}}}],["visit",{"_index":729,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":743,"title":{},"body":{"index.html":{}}}],["watch",{"_index":678,"title":{},"body":{"index.html":{}}}],["website",{"_index":777,"title":{},"body":{"index.html":{}}}],["weren\\'t",{"_index":598,"title":{},"body":{"injectables/ProductsService.html":{}}}],["where.created_at",{"_index":403,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["where.or",{"_index":408,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["where.price",{"_index":432,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["where.price.gte",{"_index":434,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["where.price.lte",{"_index":436,"title":{},"body":{"injectables/FindAllProductsProvider.html":{}}}],["where.status",{"_index":402,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["where.updated_at",{"_index":406,"title":{},"body":{"injectables/FindAllCategoryProvider.html":{},"injectables/FindAllProductsProvider.html":{}}}],["where:whereconditions",{"_index":492,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["whereconditions",{"_index":470,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["working",{"_index":728,"title":{},"body":{"index.html":{}}}],["world",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":229,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["x",{"_index":756,"title":{},"body":{"index.html":{}}}],["yes",{"_index":475,"title":{},"body":{"injectables/PaginationHelper.html":{}}}],["you'd",{"_index":770,"title":{},"body":{"index.html":{}}}],["you're",{"_index":688,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/PrismaModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nPaginationHelper \n\nPaginationHelper \n\nPaginationHelper  -->\n\nAppModule->PaginationHelper \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPaginationHelper\n\nPaginationHelper\n\nAppModule -->\n\nPaginationHelper->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PaginationHelper\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CategoriesModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaginationHelper\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CategoriesModule } from './categories/categories.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { PaginationHelper } from './common/pagination/helper/pagination.helper';\nimport { ProductsModule } from './products/products.module';\n\n@Module({\n  imports: [CategoriesModule, PrismaModule, ProductsModule],\n  controllers: [AppController],\n  providers: [AppService, PrismaService,PaginationHelper],\n  exports:[PaginationHelper]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new category'})@ApiResponse({status: 201, description: 'Category successfully created'})\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete a category'})@ApiResponse({status: 200, description: 'Category deleted successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(categoryQueryDto: CategoryQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all categories with optional filters'})@ApiResponse({status: 200, description: 'All categories fetched successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryQueryDto\n                                            \n                                                            CategoryQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a category by Id'})@ApiResponse({status: 200, description: 'Category fetched successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a category'})@ApiResponse({status: 200, description: 'Category updated successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/categories/categories.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CategoriesService } from './categories.service';\nimport { CreateCategoryDto } from './dtos/create-category.dto';\nimport { CategoryQueryDto } from './dtos/category-query.dto';\nimport { UpdateCategoryDto } from './dtos/update-category.dto';\n\n@ApiTags('categories') // create separate category named \"categories\" in swagger ui\n@Controller('categories')\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n    \n    // post controller for create category\n  @Post()\n  @ApiOperation({ summary: 'Create a new category' })\n  @ApiResponse({ status: 201, description: 'Category successfully created' })\n  create(@Body() createCategoryDto: CreateCategoryDto) {\n    return this.categoriesService.createCategory(createCategoryDto);\n    }\n    \n\n    // get all controller for fetching category\n    @Get()\n    @ApiOperation({ summary: 'Get all categories with optional filters' })\n        @ApiResponse({status: 200, description: 'All categories fetched successfully'})\n    findAll(@Query() categoryQueryDto: CategoryQueryDto) {\n        return this.categoriesService.findAllCategory(categoryQueryDto)\n    }\n\n\n    // get single controller for fetching category\n    @Get(':id')\n    @ApiOperation({ summary: 'Get a category by Id' })\n    @ApiResponse({ status: 200, description: 'Category fetched successfully' })\n    findOne(@Param('id') id: string) {\n        return this.categoriesService.findById(id)\n    }\n\n\n    // patch controller for category\n    @Patch(':id')\n    @ApiOperation({ summary: 'Update a category' })\n    @ApiResponse({ status: 200, description: 'Category updated successfully' })\n    update(\n        @Param('id') id: string,\n        @Body() updateCategoryDto: UpdateCategoryDto) {\n        return this.categoriesService.updateCategory(id,updateCategoryDto)\n    }\n    \n\n    // delete controller for category\n    @Delete(':id')\n    @ApiOperation({ summary: 'Delete a category' })\n    @ApiResponse({ status: 200, description: 'Category deleted successfully' })\n    delete(@Param('id') id: string) {\n        return this.categoriesService.deleteCategory(id);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_CategoriesModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nPrismaModule->CategoriesModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nFindAllCategoryProvider\n\nFindAllCategoryProvider\n\nCategoriesModule -->\n\nFindAllCategoryProvider->CategoriesModule\n\n\n\n\n\nGenerateSlug\n\nGenerateSlug\n\nCategoriesModule -->\n\nGenerateSlug->CategoriesModule\n\n\n\n\n\nPaginationHelper\n\nPaginationHelper\n\nCategoriesModule -->\n\nPaginationHelper->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                        \n                            FindAllCategoryProvider\n                        \n                        \n                            GenerateSlug\n                        \n                        \n                            PaginationHelper\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoriesController } from './categories.controller';\nimport { CategoriesService } from './categories.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { FindAllCategoryProvider } from './providers/find-all-category.provider';\nimport { PaginationHelper } from 'src/common/pagination/helper/pagination.helper';\nimport { GenerateSlug } from 'src/common/helper/generate-slug.helper';\n\n@Module({\n  controllers: [CategoriesController],\n  providers: [\n    CategoriesService,\n    FindAllCategoryProvider,\n    PaginationHelper,\n    GenerateSlug\n  ],\n  imports: [PrismaModule]\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createCategory\n                            \n                            \n                                    Public\n                                    Async\n                                deleteCategory\n                            \n                            \n                                    Public\n                                    Async\n                                findAllCategory\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, findAllCategoryProvider: FindAllCategoryProvider, generateSlug: GenerateSlug)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllCategoryProvider\n                                                  \n                                                        \n                                                                        FindAllCategoryProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateSlug\n                                                  \n                                                        \n                                                                        GenerateSlug\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory(createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/categories.service.ts:32\n                        \n                    \n\n\n            \n                \n                        category creation service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                : combination of store_id and name\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteCategory(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/categories.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCategory(categoryQueryDto: CategoryQueryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/categories.service.ts:59\n                        \n                    \n\n\n            \n                \n                        find all the categories service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryQueryDto\n                                            \n                                                            CategoryQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : category query object instance including pagination object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                : category object array as response with pagination meta data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/categories.service.ts:69\n                        \n                    \n\n\n            \n                \n                        find any category by id service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : category id\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                : category object from database\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCategory(id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/categories.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CategoryStatus } from '@prisma/client';\nimport { GenerateSlug } from 'src/common/helper/generate-slug.helper';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CategoryQueryDto } from './dtos/category-query.dto';\nimport { CreateCategoryDto } from './dtos/create-category.dto';\nimport { UpdateCategoryDto } from './dtos/update-category.dto';\nimport { FindAllCategoryProvider } from './providers/find-all-category.provider';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly findAllCategoryProvider: FindAllCategoryProvider,\n    private readonly generateSlug: GenerateSlug,\n  ) {}\n\n  /**\n   *  private method for generating slug by combine with store_id and name\n   * @param store_id : unique id of the store\n   * @param name : name of the store\n   * @returns : combination of store_id and name\n   */\n\n  /**\n   * category creation service\n   *\n   * @param createCategoryDto : category object instance\n   *\n   */\n\n  public async createCategory(createCategoryDto: CreateCategoryDto) {\n    // destructuring for generating slug and default status\n\n    const {\n      name,\n      store_id,\n      status = CategoryStatus.ACTIVE,\n    } = createCategoryDto;\n\n    const slug = this.generateSlug.generateSlug(store_id, name);\n\n    return this.prisma.category.create({\n      data: {\n        name,\n        slug,\n        status,\n        store_id,\n      },\n    });\n  }\n\n  /**\n   * find all the categories service\n   * @param categoryQueryDto : category query object instance including pagination object\n   * @returns : category object array as response with pagination meta data\n   */\n\n  public async findAllCategory(categoryQueryDto: CategoryQueryDto) {\n    return await this.findAllCategoryProvider.findAll(categoryQueryDto);\n  }\n\n  /**\n   * find any category by id service\n   * @param id : category id\n   * @returns : category object from database\n   */\n\n  public async findById(id: string) {\n    // checking if category exists\n    const category = await this.prisma.category.findUnique({ where: { id } });\n\n    // if category isn't exists, throw not found exception\n    if (!category) {\n      throw new NotFoundException(`Category with ${id} not found`, {\n        cause: 'Wrong category id',\n        description: 'Provided category was not found in the database',\n      });\n    }\n\n    // if category exists then return that category\n    return category;\n  }\n\n  public async updateCategory(\n    id: string,\n    updateCategoryDto: UpdateCategoryDto,\n  ) {\n    // checking if category exists\n    await this.findById(id);\n\n    /**\n     * though slug is combine of store_id and name,\n     * if user wants to update category name\n     * then we have re-generate slug again\n     *  */\n    if (updateCategoryDto.name) {\n      const category = await this.prisma.category.findUnique({ where: { id } });\n      updateCategoryDto['slug'] = this.generateSlug.generateSlug(\n        category!.store_id,\n        updateCategoryDto.name,\n      );\n    }\n\n    // return the updated category object along with new slug\n    return this.prisma.category.update({\n      where: { id },\n      data: updateCategoryDto,\n    });\n  }\n\n  public async deleteCategory(id: string) {\n    // checking if category exists before initialize the delete operation\n    await this.findById(id);\n    return this.prisma.category.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryQueryDto.html":{"url":"classes/CategoryQueryDto.html","title":"class - CategoryQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dtos/category-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                created_At\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                search\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sortBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                sortOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updated_At\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        created_At\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, description: 'creation date of category'})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/category-query.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, default: 10, description: 'Items per page for pagination'})@Type(undefined)@IsInt()@IsOptional()@Min(1)@Max(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/category-query.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, default: 1, description: 'Page number for pagination'})@Type(undefined)@IsInt()@IsOptional()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/category-query.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, description: 'Name or slug of the category', examples: undefined})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/category-query.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'created_At'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, default: 'created_At', description: 'Field for sorting'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/category-query.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                \n                    \n                        Default value : 'desc'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, enum: undefined, default: 'desc', description: 'Sorting order for pagination'})@IsOptional()@IsIn(['asc', 'desc'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/category-query.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CategoryStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, enum: undefined, default: 'ACTIVE', description: 'Category status'})@IsOptional()@IsEnum(CategoryStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/category-query.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updated_At\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, description: 'update date of category'})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/category-query.dto.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiPropertyOptional } from '@nestjs/swagger';\nimport { CategoryStatus } from '@prisma/client';\nimport { Type } from 'class-transformer';\nimport {\n  IsDateString,\n  IsEnum,\n  IsIn,\n  IsInt,\n  IsOptional,\n  IsString,\n  Max,\n  Min,\n} from 'class-validator';\n\nexport class CategoryQueryDto {\n  \n  @ApiPropertyOptional({\n    required: false,\n    default: 1,\n    description: 'Page number for pagination',\n  })\n  @Type(() => Number)\n  @IsInt()\n  @IsOptional()\n  @Min(1)\n  page?: number = 1;\n\n  @ApiPropertyOptional({\n    required: false,\n    default: 10,\n    description: 'Items per page for pagination',\n  })\n  @Type(() => Number)\n  @IsInt()\n  @IsOptional()\n  @Min(1)\n  @Max(50)\n  limit?: number = 10;\n\n  @ApiPropertyOptional({\n    required: false,\n    default: 'created_At',\n    description: 'Field for sorting',\n  })\n  @IsOptional()\n  sortBy?: string = 'created_At';\n\n  @ApiPropertyOptional({\n    required: false,\n    enum: ['asc', 'desc'],\n    default: 'desc',\n    description: 'Sorting order for pagination',\n  })\n  @IsOptional()\n  @IsIn(['asc', 'desc'])\n  sortOrder?: 'asc' | 'desc' = 'desc';\n\n  \n\n  @ApiPropertyOptional({\n    required: false,\n    enum: ['ACTIVE', 'INACTIVE', 'UPCOMING', 'DISCONTINUED'],\n    default: 'ACTIVE',\n    description: 'Category status',\n  })\n  @IsOptional()\n  @IsEnum(CategoryStatus)\n  status?: CategoryStatus;\n\n  @ApiPropertyOptional({\n    required: false,\n    description: 'creation date of category',\n  })\n  @IsOptional()\n  @IsDateString()\n  created_At?: Date;\n\n  @ApiPropertyOptional({\n    required: false,\n    description: 'update date of category',\n  })\n  @IsOptional()\n  @IsDateString()\n  updated_At?: Date;\n\n  @ApiPropertyOptional({\n    required: false,\n    description: 'Name or slug of the category',\n  examples: ['Pizza','store-1-burger']\n  })\n  @IsOptional()\n  @IsString()\n  search?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                store_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, description: 'Category Name', example: 'Pizza'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/create-category.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Slug (auto-generated if it is absent)', example: 'store_111-burger'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/create-category.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CategoryStatus\n\n                    \n                \n                \n                    \n                        Default value : CategoryStatus.ACTIVE\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, enum: undefined, default: undefined, description: 'Category status'})@IsOptional()@IsEnum(CategoryStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/create-category.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        store_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, description: 'Store id'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dtos/create-category.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { CategoryStatus } from \"@prisma/client\";\nimport { IsEnum, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateCategoryDto {\n  @ApiProperty({\n    required: true,\n    description: 'Category Name',\n    example: 'Pizza',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiPropertyOptional({\n    required: false,\n    enum: ['ACTIVE', 'INACTIVE', 'UPCOMING', 'DISCONTINUED'],\n    default: CategoryStatus.ACTIVE,\n    description: 'Category status',\n  })\n  @IsOptional()\n  @IsEnum(CategoryStatus)\n  status?: CategoryStatus = CategoryStatus.ACTIVE;\n\n  @ApiPropertyOptional({\n    description: 'Slug (auto-generated if it is absent)',\n    example: 'store_111-burger',\n  })\n  @IsString()\n  @IsOptional()\n  slug?: string;\n\n  @ApiProperty({\n    required: true,\n    description: 'Store id',\n  })\n  @IsString()\n  @IsNotEmpty()\n  store_id: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                categoryIds\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                franchise_id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                meta\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                preparation_time\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                pricing_type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                store_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        categoryIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Array of category ids', example: undefined})@IsUUID('all', {each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional description of the product', example: 'A delicious pizza with cheese'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        franchise_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Franchise id that product belongs', example: 'fran_111'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'MetaData as JSON object', example: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Product name', example: 'Pizza'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        preparation_time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Preparation time in minutes', example: 15})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Price of the product', example: 9.99})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        pricing_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductPricingType\n\n                    \n                \n                \n                    \n                        Default value : ProductPricingType.FLAT\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Pricing type of the product', enum: ProductPricingType, example: undefined})@IsEnum(ProductPricingType)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Slug (will be auto-generated if absent)', example: 'store_111-burger'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProductStatus\n\n                    \n                \n                \n                    \n                        Default value : ProductStatus.PUBLISHED\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status of the product', enum: ProductStatus, example: undefined})@IsEnum(ProductStatus)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        store_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Store id that product belongs', example: 'store_111'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/create-product.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { ProductPricingType, ProductStatus } from \"@prisma/client\";\nimport { IsEnum, IsNotEmpty, IsNumber, IsOptional, IsString, IsUUID } from \"class-validator\";\n\nexport class CreateProductDto {\n  @ApiProperty({\n    description: 'Store id that product belongs',\n    example: 'store_111',\n  })\n  @IsString()\n  @IsNotEmpty()\n  store_id: string;\n\n  @ApiProperty({\n    description: 'Franchise id that product belongs',\n    example: 'fran_111',\n  })\n  @IsString()\n  @IsNotEmpty()\n  franchise_id: string;\n\n  @ApiProperty({\n    description: 'Product name',\n    example: 'Pizza',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiPropertyOptional({\n    description: 'Optional description of the product',\n    example: 'A delicious pizza with cheese',\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    description: 'Price of the product',\n    example: 9.99,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  price: number;\n\n  @ApiProperty({\n    description: 'Pricing type of the product',\n    enum: ProductPricingType,\n    example: ProductPricingType.FLAT,\n  })\n  @IsEnum(ProductPricingType)\n  @IsOptional()\n  pricing_type: ProductPricingType = ProductPricingType.FLAT;\n\n  @ApiProperty({\n    description: 'Preparation time in minutes',\n    example: 15,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  preparation_time: number;\n\n  @ApiProperty({\n    description: 'Status of the product',\n    enum: ProductStatus,\n    example: ProductStatus.PUBLISHED,\n  })\n  @IsEnum(ProductStatus)\n  @IsOptional()\n  status?: ProductStatus = ProductStatus.PUBLISHED;\n\n  @ApiPropertyOptional({\n    description: 'Slug (will be auto-generated if absent)',\n    example: 'store_111-burger',\n  })\n  @IsString()\n  @IsNotEmpty()\n  slug?: string;\n\n  @ApiPropertyOptional({\n    description: 'MetaData as JSON object',\n    example: { calories: '250k', size: 'Medium' },\n  })\n  @IsOptional()\n  meta?: object;\n\n  @ApiPropertyOptional({\n    description: 'Array of category ids',\n    example: ['cat_111','cat_112'],\n  })\n  @IsUUID('all',{each:true})\n  @IsOptional()\n  categoryIds?: string[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllCategoryProvider.html":{"url":"injectables/FindAllCategoryProvider.html","title":"injectable - FindAllCategoryProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllCategoryProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/providers/find-all-category.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, paginationHelper: PaginationHelper)\n                    \n                \n                        \n                            \n                                Defined in src/categories/providers/find-all-category.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationHelper\n                                                  \n                                                        \n                                                                        PaginationHelper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(categoryQueryDto: CategoryQueryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/categories/providers/find-all-category.provider.ts:19\n                        \n                    \n\n\n            \n                \n                        find all the categories service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                categoryQueryDto\n                                            \n                                                            CategoryQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : category query object instance including pagination object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                : category object array as response with pagination meta data\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CategoryQueryDto } from '../dtos/category-query.dto';\nimport { PaginationHelper } from 'src/common/pagination/helper/pagination.helper';\n\n@Injectable()\nexport class FindAllCategoryProvider {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly paginationHelper: PaginationHelper,\n  ) {}\n  /**\n   * find all the categories service\n   * @param categoryQueryDto : category query object instance including pagination object\n   * @returns : category object array as response with pagination meta data\n   */\n\n  public async findAll(categoryQueryDto: CategoryQueryDto) {\n    // destructuring for for check and set the query value\n\n    const {\n      status,\n      created_At,\n      search,\n      updated_At,\n      limit,\n      page,\n      sortBy,\n      sortOrder,\n    } = categoryQueryDto;\n\n    const where: any = {};\n\n    // adding filter logic\n\n    if (status) where.status = status;\n    if (created_At) where.created_At = { gte: new Date(created_At) };\n    if (updated_At) where.updated_At = { gte: new Date(updated_At) };\n    if (search) {\n      where.OR = [\n        { name: { contains: search, mode: 'insensitive' } },\n        { slug: { contains: search, mode: 'insensitive' } },\n      ];\n    }\n    return this.paginationHelper.paginate(\n      'category',\n      where,\n      page,\n      limit,\n      {\n        products: {\n          //including related data\n          select: { id: true, name: true },\n        },\n      },\n      {\n        [sortBy ?? 'created_At']: sortOrder,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FindAllProductsProvider.html":{"url":"injectables/FindAllProductsProvider.html","title":"injectable - FindAllProductsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  FindAllProductsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/providers/find-all-products.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, paginationHelper: PaginationHelper)\n                    \n                \n                        \n                            \n                                Defined in src/products/providers/find-all-products.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationHelper\n                                                  \n                                                        \n                                                                        PaginationHelper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQueryDto: ProductQueryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/providers/find-all-products.provider.ts:20\n                        \n                    \n\n\n            \n                \n                        find all products with filter options\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productQueryDto\n                                            \n                                                            ProductQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : Query parameter for filtering products\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                : products object array\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PaginationHelper } from 'src/common/pagination/helper/pagination.helper';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ProductQueryDto } from '../dtos/product-query.dto';\n\n@Injectable()\nexport class FindAllProductsProvider {\n    constructor(\n        private readonly prisma: PrismaService,\n        private readonly paginationHelper:PaginationHelper\n    ) { }\n    \n    /**\n       * find all products with filter options\n       * @param productQueryDto : Query parameter for filtering products\n       * @returns : products object array\n       */  \n        \n        public async findAll(productQueryDto: ProductQueryDto) {\n            \n            // destructing all options for applying filter logic\n            const { minPrice, maxPrice, status, limit, page, sortBy, sortOrder, search, created_At, updated_At } = productQueryDto;\n    \n            const where: any = {};\n    \n            // filter by price\n            if (minPrice !== undefined || maxPrice !== undefined) {\n                where.price = {};\n                if(minPrice !== undefined) where.price.gte = minPrice;\n                if(maxPrice !== undefined) where.price.lte = maxPrice;\n            }\n    \n            // filter by status, creation and update date\n            if (status) where.status = status;\n                if (created_At) where.created_At = { gte: new Date(created_At) };\n                if (updated_At) where.updated_At = { gte: new Date(updated_At) };\n    \n            // field base search filter\n            if(search){\n                where.OR = [\n                    {name: {contains:search, mode: 'insensitive'}},\n                    {description: {contains:search, mode: 'insensitive'}},\n                    { slug: { contains: search, mode: 'insensitive' } },\n                    { preparation_time: { contains: search, mode: 'insensitive' } }\n                    \n                ]\n            }\n    \n    \n            return this.paginationHelper.paginate(\n                'product',\n                where,\n                page,\n                limit,\n                {\n                    categories : {\n                        select: {id:true,name:true}\n                    }\n                },\n                {\n                    [sortBy ?? 'created_At']: sortOrder\n                }\n            )\n        }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateSlug.html":{"url":"injectables/GenerateSlug.html","title":"injectable - GenerateSlug","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateSlug\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helper/generate-slug.helper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateSlug\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generateSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateSlug(store_id: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/helper/generate-slug.helper.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                store_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class GenerateSlug {\n  public generateSlug(store_id: string, name: string): string {\n    return `${store_id}-${name.toLocaleLowerCase()}`;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/dtos/paginatedResponse.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/paginatedResponse.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/paginatedResponse.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatedResponseDto {\n\n    data: T[];\n    meta: {\n        page: number;\n        limit: number;\n        totalItems: number;\n        totalPages: number;\n        hasNextPage: boolean;\n        hasPreviousPage: boolean;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/dtos/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                search\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sortBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                sortOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, default: 10, description: 'Items per page for pagination'})@Type(undefined)@IsInt()@IsOptional()@Min(1)@Max(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, default: 1, description: 'Page number for pagination'})@Type(undefined)@IsInt()@IsOptional()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, description: 'Search keyword for pagination'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'created_At'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, default: 'created_At', description: 'Field for sorting'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                \n                    \n                        Default value : 'desc'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, enum: undefined, default: 'desc', description: 'Sorting order for pagination'})@IsOptional()@IsIn(['asc', 'desc'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/pagination/dtos/pagination.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsIn, IsInt, IsOptional, Max, Min } from \"class-validator\";\n\nexport class PaginationDto {\n  @ApiPropertyOptional({\n    required: false,\n    default: 1,\n    description: 'Page number for pagination',\n  })\n  @Type(() => Number) // converting string to number\n  @IsInt()\n  @IsOptional()\n  @Min(1)\n  page?: number = 1;\n\n  @ApiPropertyOptional({\n    required: false,\n    default: 10,\n    description: 'Items per page for pagination',\n  })\n  @Type(() => Number) // converting string to number\n  @IsInt()\n  @IsOptional()\n  @Min(1)\n  @Max(50)\n  limit?: number = 10;\n\n  @ApiPropertyOptional({\n    required: false,\n    default: 'created_At',\n    description: 'Field for sorting',\n  })\n  @IsOptional()\n  sortBy?: string = 'created_At';\n\n  @ApiPropertyOptional({\n    required: false,\n    enum: ['asc', 'desc'],\n    default: 'desc',\n    description: 'Sorting order for pagination',\n  })\n  @IsOptional()\n  @IsIn(['asc', 'desc'])\n  sortOrder?: 'asc' | 'desc' = 'desc';\n\n  @ApiPropertyOptional({\n    required: false,\n    description: 'Search keyword for pagination',\n  })\n  @IsOptional()\n  search?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaginationHelper.html":{"url":"injectables/PaginationHelper.html","title":"injectable - PaginationHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  PaginationHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pagination/helper/pagination.helper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                paginate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/common/pagination/helper/pagination.helper.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        paginate\n                        \n                    \n                \n            \n            \n                \n                        \n                    paginate(model: string, whereConditions: any, page: number, limit: number, includesRelations: any, orderBy?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/pagination/helper/pagination.helper.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                whereConditions\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    10\n                                            \n\n                                        \n                                        \n                                                includesRelations\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                orderBy\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PrismaService } from \"src/prisma/prisma.service\";\n\n@Injectable()\nexport class PaginationHelper { \n    constructor(\n        private prisma: PrismaService\n    ) { }\n    \n    public async paginate(\n        model: string, // model for selecting table\n        whereConditions: any, // filtering logic\n        page: number = 1,\n        limit: number = 10,\n        includesRelations: any,\n        orderBy?: any\n    ): Promise{\n        \n        const skip = (page - 1) * limit;\n\n        // calculating skipping items\n\n        const [data, total] = await Promise.all([\n            this.prisma[model].findMany({\n                where: whereConditions,\n                skip: skip,\n                take: limit,\n                include: includesRelations,\n                orderBy: orderBy\n            }) as T[],\n            \n        // count available total items for applied conditions\n            \n            this.prisma[model].count({\n                where:whereConditions\n            })\n        ]);\n\n\n        // calculating others pagination meta data\n\n        const totalPages = Math.ceil(total / limit);\n        const hasNextPage = page  1;\n\n        return {\n            data: data,\n            meta: {\n                 total,\n                 page,\n                 limit,\n                totalPages,\n                hasNextPage,\n                hasPreviousPage\n            }\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n    providers: [PrismaService],\n    exports:[PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductQueryDto.html":{"url":"classes/ProductQueryDto.html","title":"class - ProductQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/product-query.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                created_At\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                maxPrice\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                minPrice\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                search\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sortBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                sortOrder\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                updated_At\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        created_At\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, description: 'creation date of product'})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, default: 10, description: 'Items per page for pagination'})@Type(undefined)@IsInt()@IsOptional()@Min(1)@Max(50)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        maxPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Query parameter for product's maximum price filter', example: 1550})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        minPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Query parameter for product's minimum price filter', example: 250})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, default: 1, description: 'Page number for pagination'})@Type(undefined)@IsInt()@IsOptional()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, description: 'Name or slug of the product', examples: undefined})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'created_At'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, default: 'created_At', description: 'Field for sorting'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                \n                    \n                        Default value : 'desc'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, enum: undefined, default: 'desc', description: 'Sorting order for pagination'})@IsOptional()@IsIn(['asc', 'desc'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Query parameter for product's status filter', example: undefined})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        updated_At\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({required: false, description: 'update date of product'})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dtos/product-query.dto.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { ProductStatus } from '@prisma/client';\nimport { Type } from 'class-transformer';\nimport { IsDateString, IsIn, IsInt, IsNumber, IsOptional, IsString, Max, Min } from 'class-validator';\n\nexport class ProductQueryDto {\n\n  @ApiPropertyOptional({\n      required: false,\n      default: 1,\n      description: 'Page number for pagination',\n    })\n    @Type(() => Number)\n    @IsInt()\n    @IsOptional()\n    @Min(1)\n    page?: number = 1;\n  \n    @ApiPropertyOptional({\n      required: false,\n      default: 10,\n      description: 'Items per page for pagination',\n    })\n    @Type(() => Number)\n    @IsInt()\n    @IsOptional()\n    @Min(1)\n    @Max(50)\n    limit?: number = 10;\n  \n    @ApiPropertyOptional({\n      required: false,\n      default: 'created_At',\n      description: 'Field for sorting',\n    })\n    @IsOptional()\n    sortBy?: string = 'created_At';\n  \n    @ApiPropertyOptional({\n      required: false,\n      enum: ['asc', 'desc'],\n      default: 'desc',\n      description: 'Sorting order for pagination',\n    })\n    @IsOptional()\n    @IsIn(['asc', 'desc'])\n    sortOrder?: 'asc' | 'desc' = 'desc';\n  \n\n  @ApiPropertyOptional({\n    description: \"Query parameter for product's minimum price filter\",\n    example: 250,\n  })\n  @IsOptional()\n  @IsNumber()\n  minPrice?: number;\n\n  @ApiPropertyOptional({\n    description: \"Query parameter for product's maximum price filter\",\n    example: 1550,\n  })\n  @IsOptional()\n  @IsNumber()\n  maxPrice?: number;\n\n\n  @ApiPropertyOptional({\n    description: \"Query parameter for product's status filter\",\n    example: ProductStatus.PUBLISHED,\n  })\n  @IsOptional()\n  @IsString()\n  status?: string;\n\n  @ApiPropertyOptional({\n    required: false,\n    description: 'creation date of product',\n  })\n  @IsOptional()\n  @IsDateString()\n  created_At?: Date;\n\n  @ApiPropertyOptional({\n    required: false,\n    description: 'update date of product',\n  })\n  @IsOptional()\n  @IsDateString()\n  updated_At?: Date;\n\n  @ApiPropertyOptional({\n    required: false,\n    description: 'Name or slug of the product',\n    examples: ['Pizza', 'store-1-burger'],\n  })\n  @IsOptional()\n  @IsString()\n  search?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new product'})@ApiResponse({status: 201, description: 'Product successfully created'})\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQueryDto: ProductQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all products with optional filters'})\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productQueryDto\n                                            \n                                                            ProductQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get a product by ID'})@ApiResponse({status: 200, description: 'Product fetched successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete a product'})@ApiResponse({status: 200, description: 'Product deleted successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a product'})@ApiResponse({status: 200, description: 'Product updated successfully'})\n                \n            \n\n                    \n                        \n                            Defined in src/products/products.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ProductsService } from './products.service';\nimport { UpdateProductDto } from './dtos/update-product.dto';\nimport { ProductQueryDto } from './dtos/product-query.dto';\nimport { CreateProductDto } from './dtos/create-product.dto';\n\n@ApiTags('products')\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new product' })\n  @ApiResponse({ status: 201, description: 'Product successfully created' })\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productsService.createProduct(createProductDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get all products with optional filters' })\n  findAll(@Query() productQueryDto: ProductQueryDto) {\n    return this.productsService.findAll(productQueryDto);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get a product by ID' })\n  @ApiResponse({ status: 200, description: 'Product fetched successfully' })\n  findOne(@Param('id') id: string) {\n    return this.productsService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update a product' })\n  @ApiResponse({ status: 200, description: 'Product updated successfully' })\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productsService.updateProduct(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete a product' })\n  @ApiResponse({ status: 200, description: 'Product deleted successfully' })\n  remove(@Param('id') id: string) {\n    return this.productsService.deleteProduct(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_ProductsModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPrismaModule->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nGenerateSlug\n\nGenerateSlug\n\nProductsModule -->\n\nGenerateSlug->ProductsModule\n\n\n\n\n\nPaginationHelper\n\nPaginationHelper\n\nProductsModule -->\n\nPaginationHelper->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FindAllProductsProvider\n                        \n                        \n                            GenerateSlug\n                        \n                        \n                            PaginationHelper\n                        \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsController } from './products.controller';\nimport { ProductsService } from './products.service';\nimport { PaginationHelper } from 'src/common/pagination/helper/pagination.helper';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { GenerateSlug } from 'src/common/helper/generate-slug.helper';\nimport { FindAllProductsProvider } from './providers/find-all-products.provider';\n\n\n@Module({\n  controllers: [ProductsController],\n  providers: [ProductsService, PaginationHelper,GenerateSlug, FindAllProductsProvider],\n  imports: [PrismaModule]\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createProduct\n                            \n                            \n                                    Public\n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, generateSlug: GenerateSlug, paginationHelper: PaginationHelper, findAllProducts: FindAllProductsProvider)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateSlug\n                                                  \n                                                        \n                                                                        GenerateSlug\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginationHelper\n                                                  \n                                                        \n                                                                        PaginationHelper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        findAllProducts\n                                                  \n                                                        \n                                                                        FindAllProductsProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:28\n                        \n                    \n\n\n            \n                \n                         Create product service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    :product creation instance\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProduct(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:180\n                        \n                    \n\n\n            \n                \n                        delete service for products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : product id\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(productQueryDto: ProductQueryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:82\n                        \n                    \n\n\n            \n                \n                        find all products with filter options\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                productQueryDto\n                                            \n                                                            ProductQueryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : Query parameter for filtering products\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                : products object array\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Find by product id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : product id\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                :product object\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/products/products.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Update product service\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    :product id\n\n                                            \n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : Partial type of create product instance\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FindAllProductsProvider } from './providers/find-all-products.provider';\nimport { PaginationHelper } from './../common/pagination/helper/pagination.helper';\nimport { ProductQueryDto } from './dtos/product-query.dto';\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { GenerateSlug } from 'src/common/helper/generate-slug.helper';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateProductDto } from './dtos/create-product.dto';\nimport { UpdateProductDto } from './dtos/update-product.dto';\n\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    private readonly prisma: PrismaService,\n      private readonly generateSlug: GenerateSlug,\n      private readonly paginationHelper: PaginationHelper,\n    private readonly findAllProducts: FindAllProductsProvider,\n  ) {}\n\n    \n    /**\n     *  Create product service\n     * \n     * @param createProductDto :product creation instance\n     * \n     */\n    \n  public async createProduct(createProductDto: CreateProductDto) {\n    \n      // destructuring for generating slug and collect the category ids array\n      const {\n      name,\n      store_id,\n      categoryIds,\n      status = 'PUBLISHED',\n      ...rest\n    } = createProductDto;\n\n      // generating slug with store_id and name\n    const slug = this.generateSlug.generateSlug(store_id, name);\n\n      // checking if categories exist with the provided categories ids\n    const categories = await this.prisma.category.findMany({\n      where: { id: { in: categoryIds } },\n    });\n\n    if (categories.length !== categoryIds?.length) {\n      throw new NotFoundException('Categories not found', {\n        cause: 'One or more categories not found in database ',\n        description:\n          \"Provided category id(s) don't with any category in database\",\n      });\n    }\n\n    \n    return this.prisma.product.create({\n      data: {\n        name,\n        slug,\n        status,\n        store_id,\n            ...rest,\n        // join this product with provided categories via id\n        categories: {\n          connect: categoryIds.map((categoryId) => ({\n            id: categoryId, \n          })),\n        },\n      },\n      include: {\n        categories: true\n      },\n    });\n  }\n\n  /**\n   * find all products with filter options\n   * @param productQueryDto : Query parameter for filtering products\n   * @returns : products object array\n   */  \n    \n    public async findAll(productQueryDto: ProductQueryDto) {\n       return await this.findAllProducts.findAll(productQueryDto)\n       }\n\n\n    /**\n     * Find by product id\n     * @param id : product id\n     * @returns :product object\n     */\n\n    public async findById(id: string) {\n// checking if product exists\n        const product = await this.prisma.product.findUnique({\n            where: { id },\n            include: {\n                categories: true\n            }\n    })\n\n        if (!product) {\n            throw new NotFoundException(`Product with ${id} not found`)\n        }\n\n        return product;\n    }\n\n\n\n    /**\n     * Update product service\n     * @param id :product id\n     * @param updateProductDto : Partial type of create product instance \n     * \n     */\n\n    public async updateProduct(id: string, updateProductDto: UpdateProductDto) {    \n    \n        // checking if products exists\n        await this.findById(id);\n\n        const { categoryIds, ...updateData } = updateProductDto;\n        \n\n        /**\n         * if name changes, then we re-generate the slug\n         */\n\n        if (updateData.name) {\n            const product = await this.prisma.product.findUnique({ where: { id } });\n            updateData['slug'] = this.generateSlug.generateSlug(product!.store_id,updateData.name)\n        }\n\n\n        // if category id need to update,then we need to check provided category ids exist in database\n        if (categoryIds) {\n            const categories = await this.prisma.category.findMany({\n                where: {id : {in : categoryIds}}\n            })\n\n            if (categories.length !== categoryIds.length) {\n                throw new NotFoundException('One or more categories not found',{\n                    cause: 'Provided categories id weren\\'t match with the database'\n                })\n            }\n\n\n            // delete existing connect between product category via id\n            await this.prisma.productCategories.deleteMany({\n                where: {product_id: id}\n            })\n\n\n            // update new category connection via category ids\n            updateData['categories'] = {\n                create: categoryIds.map((categoryId)=> ({\n                    category : {connect : {id: categoryId}}\n                }))\n            }\n        }\n\n        return this.prisma.product.update({\n            where: { id },\n            data: updateData,\n            include: {\n                categories: true\n            }\n        })\n\n    }\n\n\n    /**\n     * delete service for products\n     * @param id : product id\n     * \n     */\n\n    public async deleteProduct(id: string) {\n        await this.findById(id);\n        return this.prisma.product.delete({where: {id}})\n    }\n\n\n\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dtos/update-category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateCategoryDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateCategoryDto } from \"./create-category.dto\";\n\n\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto){}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dtos/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateProductDto } from \"./create-product.dto\";\n\nexport class UpdateProductDto extends PartialType(CreateProductDto){}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                        src/categories/dtos/category-query.dto.ts\n            \n            class\n            CategoryQueryDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/categories/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/categories/dtos/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/categories/providers/find-all-category.provider.ts\n            \n            injectable\n            FindAllCategoryProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                        src/common/helper/generate-slug.helper.ts\n            \n            injectable\n            GenerateSlug\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/common/pagination/dtos/paginatedResponse.dto.ts\n            \n            class\n            PaginatedResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/common/pagination/dtos/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/common/pagination/helper/pagination.helper.ts\n            \n            injectable\n            PaginationHelper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/products/dtos/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/products/dtos/product-query.dto.ts\n            \n            class\n            ProductQueryDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/products/dtos/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                        src/products/providers/find-all-products.provider.ts\n            \n            injectable\n            FindAllProductsProvider\n            \n                33 %\n                (1/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.30\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @prisma/client : ^6.15.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ pnpm installCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ pnpm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nCategoriesModule -->\n\nPrismaModule->CategoriesModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nPrismaModule->ProductsModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nPaginationHelper \n\nPaginationHelper \n\nPaginationHelper  -->\n\nAppModule->PaginationHelper \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPaginationHelper\n\nPaginationHelper\n\nCategoriesModule -->\n\nPaginationHelper->CategoriesModule\n\n\n\nProductsModule -->\n\nPaginationHelper->ProductsModule\n\n\n\nAppModule -->\n\nPaginationHelper->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nFindAllCategoryProvider\n\nFindAllCategoryProvider\n\nCategoriesModule -->\n\nFindAllCategoryProvider->CategoriesModule\n\n\n\n\n\nGenerateSlug\n\nGenerateSlug\n\nCategoriesModule -->\n\nGenerateSlug->CategoriesModule\n\n\n\nProductsModule -->\n\nGenerateSlug->ProductsModule\n\n\n\n\n\nFindAllProductsProvider\n\nFindAllProductsProvider\n\nProductsModule -->\n\nFindAllProductsProvider->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
